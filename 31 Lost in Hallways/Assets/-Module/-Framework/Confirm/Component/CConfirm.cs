using System.Collections.Generic;
using System;
using UnityEngine;

//메세지 창의 정보를 처리하기 위한 클래스
public class CConfirm :FrameworkBehaviour
{
	private List<objConfirm> Confirms = new List<objConfirm>();

	// 메세지 창을 생성하기 위한 함수
	public objConfirm ON( string value, CONFIRM Type=CONFIRM.NOTHING, Action<object, object> func=null, object wParam=null, object lParam=null )
	{
		if( !Library.Is(value) ) return null;
//		if( func==null ) return null;	//(NULL)값을 허용함
//		if( wParam==null ) return null;	//(NULL)값을 허용함
//		if( lParam==null ) return null;	//(NULL)값을 허용함

#if UNITY_EDITOR
		Debug.Log("(Confirm) "+value);
#endif

		RectTransform transform = MainUI.Create( "Confirm", MainUI.Fore() );
		if( transform==null ) return null;

		Library.SetLayer( transform, play.foreCanvas._GameObject().layer );

		objConfirm confirm = transform.GetComponent(typeof(objConfirm)) as objConfirm;
		if( confirm!=null )
		{
			confirm.ON( value );
			confirm.SetCommitCallback( func, wParam, lParam );

			if( !Is() )
			{
				play.foreCanvas.ForeBack().ON( confirm );
			}

			confirm.data.Type = Type;

			if( Is() )
			{
				confirm._GameObject().SetActive( false );
			}

			if( confirm.data.allowSound )
			{
				app.Sound.ON( SOUND.CONFIRM );
			}
		}

		GetList().Add( confirm );
		return confirm;
	}

	//메세지를 출력하기 위한 함수
	public objConfirm ON( string text, Action<object, object> func, object wParam=null, object lParam=null )
	{
		if( text==null ) return null;
//		if( func==null ) return null;	//(NULL)값을 허용함

		return ON( text, CONFIRM.OK, func, wParam, lParam );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 메모리를 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Release( objConfirm confirm )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (confirm)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		play.foreCanvas.ForeBack().OFF( confirm );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		GetList().Remove( confirm );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Is() )
		{
			play.foreCanvas.ForeBack().ON( GetList()[0] );
			GetList()[0].ON();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 메세지 창이 활성화되어 있는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool Is()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (GetList().Count)>(0) )
		{
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 오른쪽 버튼을 뗬을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONLBUTTONUP( Vector3 point, TOUCH_INDEX touchIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( objConfirm confirm in GetList() )
		{
			if( confirm.Is() )
			{
				if( confirm.ONLBUTTONUP( (point), (touchIndex) ) )
				{
					return true;
				}
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 오른쪽 버튼을 뗬을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONRBUTTONUP( Vector3 point )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( objConfirm confirm in GetList() )
		{
			if( confirm.ONCANCEL(CANCEL.MOUSE_RBUTTON) )
			{
				return true;
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//리스트를 얻기 위한 함수
	public List<objConfirm> GetList()
	{
		return Confirms;
	}

	//질의 객체를 얻기 위한 함수
	public objConfirm Get()
	{
		if( GetList().Count>0 )
		{
			return GetList()[0];
		}

		return null;
	}
}