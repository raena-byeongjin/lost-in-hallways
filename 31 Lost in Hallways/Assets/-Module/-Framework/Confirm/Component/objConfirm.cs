using System;
using UnityEngine.UI;
using UnityEngine;

public class objConfirm : ViewPanel
{
    [System.Serializable]
    public class tagData : _tagData
    {
		public CONFIRM			Type						= CONFIRM.NOTHING;

		public Transform		transform					= null;
		public Transform		layerButtonsOK				= null;
		public Transform		layerButtonsYesNo			= null;

		public Text				text						= null;
		public objControl		back						= null;
		public objControl		buttonYes					= null;
		public objControl		buttonNo					= null;

		public tagCallback		commitCallback				= new tagCallback();
		public tagCallback		rejectCallback				= new tagCallback();

		public bool				allowEmptySpaceConfirm		= true;
		public bool				allowSound					= true;
    };
    public tagData data	= new tagData();

	void Start()
	{
		if( data.Type==CONFIRM.YESNO )
		{
			Func.Active( data.layerButtonsYesNo.gameObject );
			Func.Inactive( data.layerButtonsOK.gameObject );
		}
		else
		{
			Func.Active( data.layerButtonsOK.gameObject );
			Func.Inactive( data.layerButtonsYesNo.gameObject );
		}
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 문자열을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ON()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( base.ON(data) )
		{
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return base.ON();
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 문자열을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void ON( string text )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		if( (text)==(null) ) return;	//(NULL)값을 허용함

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( ON() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.text.text)	= (text);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 문자열을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void ONFORE()
	{
		/*
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( app.ViewItemThumbnail.Is() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			app.ViewItemThumbnail.Fore();
//			app.ViewItemThumbnail._Transform().SetParent( _Transform().parent );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(_Transform().localPosition)	= new Vector3( (_Transform().localPosition.x), (-200), (_Transform().localPosition.z) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		*/
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 문자열을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool OFF()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return base.OFF();
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void OnDestroy()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (app)!=(null) )
		{
			app.Confirm.Release( this );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 콜백 함수를 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void SetCommitCallback( Action<object, object> func, object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (func)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		data.commitCallback.Set( (func), (wParam), (lParam) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 콜백 함수를 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void SetRejectCallback( Action<object, object> func, object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (func)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		data.rejectCallback.Set( (func), (wParam), (lParam) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 사용자 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public CONFIRM Type()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.Type);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//사용자 입력에 반응하기 위한 함수
	public void Agree()
	{
		OFF();
		data.commitCallback.Call();

		app.Sound.ON( SOUND.YES );
	}

	//취소에 반응하기 위한 함수
	public void Reject()
	{
		OFF();

		if( Type()==CONFIRM.YESNO )
		{
			data.rejectCallback.Call();
		}
		else
		{
			data.commitCallback.Call();
		}

		app.Sound.ON( SOUND.NO );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 왼쪽 버튼을 뗬을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONLBUTTONUP( Vector2 point, TOUCH_INDEX touchIndex )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Is() && ( Type()==(CONFIRM.OK) || Type()==(CONFIRM.NOTHING) ) && (data.allowEmptySpaceConfirm) && Since()>(0.1f) )
		{
			Agree();
			return true;
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return base.ONLBUTTONUP( (point), (touchIndex) );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 엔터 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONRETURN()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Is() )
		{
			Agree();
			return true;
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 취소 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONCANCEL( CANCEL nCancel )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Is() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Since()>(0.25f) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				Cancel();

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				return base.ONCANCEL( nCancel );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	// 컨트롤 입력에 반응하기 위한 함수
	public override bool ONCONTROL( objControl control, CONTROL_ACTION Action, tagFocus focus )
	{
		if( control==null ) return false;
//		if( focus==null ) return false;		//(NULL)값을 허용함

		if( control==data.back && Action==CONTROL_ACTION.SELECT && data.Type!=CONFIRM.YESNO )
		{
			Agree();
			return true;
		}

		//취소 (CANCEL)
		if( control==data.buttonNo && Action==CONTROL_ACTION.SELECT )
		{
			Cancel();
			return true;
		}

		return false;
	}

	public override void Unloader()
	{
		data.back = null;
	}

	public override void Loader()
	{
		base.Loader();

		Transform transform = Func.Get( Transform(), "Image" );
		if( transform!=null )
		{
			data.back = transform.GetComponent(typeof(objControl)) as objControl;
		}

		if( Canvas()!=null )
		{
			Canvas().Register( Panel() );
		}
	}
}