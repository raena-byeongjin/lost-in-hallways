using System.Collections;
using System.Collections.Generic;
using UnityEngine.UI;
using UnityEngine;

//-----------------------------------------------------------------------------------------------------------------------------------
// 상단 인터페이스를 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class CViewTop : ViewPanel
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData : _tagData
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public uiIdentity	identity	= (null);
		public uiCity		transfer	= (null);
		public objControl	notify		= (null);
		public objControl	foundation	= (null);
		public objControl	build		= (null);
		public objControl	cash		= (null);
		public objControl	business	= (null);
		public objControl	world		= (null);
		public objControl	stock		= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	};
	public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ON()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( base.ON(data) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// 사용자 (IDENTITY)
			//-----------------------------------------------------------------------------------------------------------------------
			Set( app.Identity.Get() );

			//-----------------------------------------------------------------------------------------------------------------------
			// 도시 (CITY)
			//-----------------------------------------------------------------------------------------------------------------------
			if( Apps.Is(app.City.Get()) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				Set( app.City.Get() );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				Func.TextWidthPerfect( data.transfer.Nation().Text() );
				Func.TextWidthPerfect( data.transfer.Name() );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			else
			{
				(data.transfer.Name().text)	= app.Language.Get(TEXT.이동중);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Notifies();
		Refresh();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return true;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 사용자를 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Set( tagIdentity identity )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (identity)==(null) ) return;
		if( !Is(true) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		Identity().Set( identity );

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 도시를 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Set( tagCityStatic city )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (city)==(null) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( Is(true) )
		{
			data.transfer.Set( city );
		}

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 사용자 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public uiIdentity Identity()
	{
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (data.identity);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 이동 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public uiCity Transfer()
	{
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (data.transfer);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스 높이를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public float Height()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Is() )
		{
			return (_RectTransform().sizeDelta.y);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (0);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 새로고침 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Refresh()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !Is(true) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		decimal cash = app.Identity.GetCash();
		string text = app.Cash.ExchangeToString( cash );
		if( (data.cash.Text().text)==(text) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.cash.Text().text) = (text);
		if( (cash)>=(0) )
		{
			(data.cash.Text().color) = Func.Color( (50), (50), (50) );
		}
		else
		{
			(data.cash.Text().color) = (Color.red);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		app.Download.ON( (app.Player.Currency().CorverTexture), (funcCurrencyIconTexture) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void funcCurrencyIconTexture( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (lParam)==(null) || lParam.GetType()!=typeof(tagTexture) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagTexture texture = (lParam as tagTexture);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.cash.RawImage().texture)	= texture.GetTexture();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// Notify 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objControl Notify()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.notify);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 메일 정보를 새로고침 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Notifies()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !Is(true) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		int Count = (0);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagNotify notify in app.Notify.GetList() )
		{
			if( notify.isNew )
			{
				(Count) += (1);
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (Count)>(0) )
		{
			Func.Active( Notify().Toggle()._GameObject() );
			(Notify().Text().text)	= Count.ToString();
		}
		else
		{
			Func.Inactive( Notify().Toggle()._GameObject() );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 취소 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONCANCEL( CANCEL Cancel )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONCONTROL( objControl control, CONTROL_ACTION Action, tagFocus focus )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(null) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// 사용자 (IDENTITY)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==Identity().Control() && (Action)==(CONTROL_ACTION.SELECT) )
		{
			app.ViewIdentityList.ON();
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 자금 (CASH)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.cash) && (Action)==(CONTROL_ACTION.SELECT) )
		{
			app.ViewWallet.ON( app.Identity.GetCashes() );
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 
		//---------------------------------------------------------------------------------------------------------------------------
		if( true )
		{
			//---------------------------------------------------------------------------------------------------------------------------
			// 도시 (CITY)
			//---------------------------------------------------------------------------------------------------------------------------
			if( (control)==Transfer().Control() && (Action)==(CONTROL_ACTION.SELECT) )
			{
//				app.ViewCity.ON( app.Player.City() );
				return true;
			}

			//---------------------------------------------------------------------------------------------------------------------------
			// 국가 (NATION)
			//---------------------------------------------------------------------------------------------------------------------------
			if( (control)==Transfer().Nation().Control() && (Action)==(CONTROL_ACTION.SELECT) )
			{
				app.ViewNation.ON( Transfer().Nation().Get() as tagNationStatic );
				return true;
			}

			//---------------------------------------------------------------------------------------------------------------------------
			// 이동 (TRANSFER)
			//---------------------------------------------------------------------------------------------------------------------------
			if( (control)==Transfer().Excute() && (Action)==(CONTROL_ACTION.SELECT) )
			{
				app.ViewTransferList.ON();
				return true;
			}

			//---------------------------------------------------------------------------------------------------------------------------
			// -
			//---------------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 메일 (MAIL)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.notify) && (Action)==(CONTROL_ACTION.SELECT) )
		{
			app.ViewNotifyList.ON();
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 대시보드 (Dashboard-Business)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.business) && (Action)==(CONTROL_ACTION.SELECT) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			app.ViewWorldMap.Inactive();
			app.ViewDashboardBusiness.Active();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// WORLD
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.world) && (Action)==(CONTROL_ACTION.SELECT) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			app.ViewWorldMap.Active();
			app.ViewDashboardBusiness.Inactive();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 주식 시장 (STOCK-MARKET)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.stock) && (Action)==(CONTROL_ACTION.SELECT) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			app.ViewStockInventory.ON();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 메모리를 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void Unloader()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.identity)		= (null);
		(data.transfer)		= (null);
		(data.notify)		= (null);
		(data.foundation)	= (null);
		(data.build)		= (null);
		(data.cash)			= (null);
		(data.business)		= (null);
		(data.world)		= (null);
		(data.stock)		= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void Loader()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		base.Loader( Resources.Load("ApplicationLoader/View/ViewTop"), (play.uiCanvas) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.identity)		= (Func.Get( Transform(), "Identity" ).GetComponent(typeof(uiIdentity)) as uiIdentity);
		(data.transfer)		= (Func.Get( Transform(), "Transfer" ).GetComponent(typeof(uiCity)) as uiCity);
		(data.notify)		= (Func.Get( Transform(), "Notify" ).GetComponent(typeof(objControl)) as objControl);
		(data.foundation)	= (Func.Get( Transform(), "Foundation" ).GetComponent(typeof(objControl)) as objControl);
		(data.build)		= (Func.Get( Transform(), "Build" ).GetComponent(typeof(objControl)) as objControl);
		(data.cash)			= (Func.Get( Transform(), "Cash" ).GetComponent(typeof(objControl)) as objControl);
		(data.business)		= (Func.Get( Transform(), "Tabs/Business" ).GetComponent(typeof(objControl)) as objControl);
		(data.world)		= (Func.Get( Transform(), "Tabs/World" ).GetComponent(typeof(objControl)) as objControl);
		(data.stock)		= (Func.Get( Transform(), "Tabs/Stock" ).GetComponent(typeof(objControl)) as objControl);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------