using System.Collections;
using System.Collections.Generic;
using UnityEngine.UI;
using UnityEngine;

//-----------------------------------------------------------------------------------------------------------------------------------
// 월드맵 정보를 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class CViewWorldMap : ViewPanel
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData : _tagData
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public objWorldMap					worldmap			= (null);
		public objAirplane					airplane			= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public List<uiWorldMapCityPin>		Pins				= new List<uiWorldMapCityPin>();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public tagCityStatic				transfer_city		= (null);
		public Vector2						preCameraPosition	= new Vector2();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	};
	public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ON()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( base.ON(data) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			ForeBack();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			app.Canvas.FullscreenScrollViewInit( ScrollView()._RectTransform() );

			/*
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.worldmap) = (FindObjectOfType(typeof(objWorldMap)) as objWorldMap);
			if( WorldMap()!=(null) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				uiWorldMapCityPin icon = (null);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				foreach( tagCityStatic citystatic in app.CityStatic.GetList() )
				{
					if( app.City.IsTransfer(citystatic) && Library.Is(citystatic.tag) )
					{
						WPMF.City city = WorldMap().Find(citystatic.tag);
						if( (city)!=(null) )
						{
							(icon) = Register( (city.unity2DLocation), (citystatic) );
							if( (icon)!=(null) )
							{
								(icon.data.city) = (city);
							}
						}
						else
						if( !Library.Is(citystatic.tag) )
						{
							Debug.Log( "도시 위치를 검색할 수 없음 : "+(citystatic) );
						}
					}
					else
					if( !Library.Is(citystatic.tag) )
					{
						Debug.LogWarning( "도시의 Tag가 입력되지 않음 : "+(citystatic) );
					}
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( Camera()!=(null) && (app.City.Get().pin)!=(null) )
				{
					(Camera().Transform().localPosition) = new Vector3( (app.City.Get().pin.data.city.unity2DLocation.x), (app.City.Get().pin.data.city.unity2DLocation.y), (Camera().Transform().localPosition.z) );
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				Refresh();
				Sort();

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			*/

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return base.ON();
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스가 전면에 출력되었을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void ONFORE()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.ViewBottom.Fore();
		app.ViewTop.Fore();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 비활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool OFF()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return base.OFF();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	/*
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void LateUpdate()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Airplane()!=(null) )
		{
			if( Airplane().IsEnd() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( app.CityStatic.Is(data.transfer_city) )
				{
					app.City.Transfer( data.transfer_city );
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(data.transfer_city)	= (null);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				app.ViewDashboardBusiness.Active();
				app.ViewWorldMap.Inactive();

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			else
			if( (Vector2)Camera().Translate().GetTargetPosition()!=(Vector2)Airplane().GetPosition() )
			{
				Camera().Translate().ON( new Vector3( (Airplane().GetPosition().x), (Airplane().GetPosition().y), (Camera().Transform().localPosition.z) ), (0.05f) );
			}
		}
		else
		{
			Enable( false );
		}
		
		//-----------------------------------------------------------------------------------------------------------------------
		// -
		//-----------------------------------------------------------------------------------------------------------------------
		if( (Vector2)Camera().GetPosition()!=(data.preCameraPosition) )
		{
			Refresh();
			(data.preCameraPosition) = Camera().GetPosition();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}
	*/

	//-------------------------------------------------------------------------------------------------------------------------------
	// 월드맵 정보를 등록하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objWorldMap WorldMap()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.worldmap);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 도시 정보를 등록하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public uiWorldMapCityPin Register( Vector2 vPos, tagCityStatic citystatic )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (citystatic)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		uiWorldMapCityPin pin = (Func.Create( Transform(), (Resources.Load("UI/WorldMapCityPin") as GameObject) ).GetComponent(typeof(uiWorldMapCityPin)) as uiWorldMapCityPin);
		if( (transform)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(pin.Transform().position)			= Library.WorldToCanvasPoint( WorldMap().Camera(), Canvas(), new Vector2( (vPos.x)*(WorldMap().Transform().localScale.x), (vPos.y)*(WorldMap().Transform().localScale.y) ) );
		(pin.Transform().localEulerAngles)	= new Vector3();
		(pin.Transform().localScale)		= new Vector3( (0.035f), (0.035f), (1f) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(citystatic.pin)	= (pin);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		app.CityStatic.CorverTextureDownload( (citystatic), (pin.funcTextureDownload) );
		pin.Set( citystatic );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		GetList().Add( pin );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (pin);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Sort()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		int					End		= (GetList().Count);
		uiWorldMapCityPin	temp	= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		for( int i=0; i<(End-1); i++ )
		{
			for( int j=(i+1); j<(End); j++ )
			{
				if( (GetList()[i].Transform().localPosition.y)<(GetList()[j].Transform().localPosition.y) )
				{
					(temp)			= GetList()[i];
					GetList()[i]	= GetList()[j];
					GetList()[j]	= (temp);
				}
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		for( int i=0; i<(End); i++ )
		{
			GetList()[i].Transform().SetSiblingIndex(i);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 리스트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public List<uiWorldMapCityPin> GetList()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.Pins);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 카메라 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objCamera Camera()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( WorldMap()!=(null) )
		{
			return WorldMap().Camera();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Refresh()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( WorldMap()==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( true )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			Vector3	vPos = (WorldMap().Camera().Transform().localPosition);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			float width		= ( (1) - Func.Dividef( (Screen.width), (Screen.height)*(2) )*GetZoomScale() ) / (2);
			float height	= ( (1)-GetZoomScale() ) / (2);
			if( (vPos.x)<(-width) )		(vPos.x) = (-width);
			if( (vPos.x)>(width) )		(vPos.x) = (width);
			if( (vPos.y)<(-height) )	(vPos.y) = (-height);
			if( (vPos.y)>(height) )		(vPos.y) = (height);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(WorldMap().Camera().Transform().localPosition)	= (vPos);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Airplane()!=(null) )
		{
			(Airplane().Image().position) = Library.WorldToCanvasPoint( WorldMap().Camera(), Canvas(), new Vector2( (Airplane().Transform().position.x), (Airplane().Transform().position.y) ) );
		}

		/*
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( uiWorldMapCityPin pin in GetList() )
		{
			(pin.Transform().position) = Func.WorldToCanvasPoint( WorldMap().Camera(), Canvas(), new Vector2( (pin.data.city.unity2DLocation.x)*(WorldMap().Transform().localScale.x), (pin.data.city.unity2DLocation.y)*(WorldMap().Transform().localScale.y) ) );
		}
		*/

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public float GetZoomScale()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( WorldMap()!=(null) && WorldMap().Camera()!=(null) )
		{
			return Func.Divide( WorldMap().Camera().GetFieldOfView(), (GAME.ZOOM_MAX) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (1f);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 도시를 이동하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Transfer( tagCityStatic citystatic )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (citystatic)==(null) ) return;

		/*
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Apps.Is(app.City.Get()) && (app.City.Get().pin)!=(null) && (citystatic.pin)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( !Is() )
			{
				ON();
			}
			else
			{
				app.ViewWorldMap.Active();
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			app.ViewDashboardBusiness.Inactive();
			app.Browser.AllInterfaceRelease();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( app.City.Get()!=(null) && (app.City.Get().pin)!=(null) )
			{
				(data.airplane) = CreateAirplane( app.City.Get(), (citystatic) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			app.Browser.SetUserInput( false );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (app.City.Get().pin)!=(null) )
			{
				Camera().Translate().ON( new Vector3( (app.City.Get().pin.data.city.unity2DLocation.x), (app.City.Get().pin.data.city.unity2DLocation.y), (Camera().Transform().localPosition.z) ), (0.05f) );
				Camera().Zoom().ON( (30f), (0.5f) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			Airplane().Move( citystatic.pin.data.city.unity2DLocation );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.transfer_city)	= (citystatic);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			Enable();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		*/
		{
			/*
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
#if UNITY_EDITOR
			Debug.Log( "도시 위치를 확인할 수 없습니다. : "+(app.City.Get().tag)+" => "+(citystatic.tag) );
#endif
			*/

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			app.City.Transfer( citystatic );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 도시를 이동하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objAirplane CreateAirplane( tagCityStatic from, tagCityStatic to )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (from)==(null) ) return (null);
		if( (to)==(null) ) return (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		GameObject	gameObject	= new GameObject();
		Transform	transform	= (gameObject.transform);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		transform.SetParent( WorldMap().Transform() );
//		(transform.localPosition)		= (app.City.Get().pin.data.city.unity2DLocation);
		(transform.localEulerAngles)	= new Vector3();
		(transform.localScale)			= new Vector3( (1), (1), (1) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		objAirplane airplane = (gameObject.AddComponent(typeof(objAirplane)) as objAirplane);
		if( (airplane)!=(null) )
		{
			CreateImage( airplane );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (airplane);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 도시를 이동하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void CreateImage( objAirplane airplane )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (airplane)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Transform transform = Func.Create( Transform(), (Resources.Load("Objects/Airplane") as GameObject) );
		if( (transform)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(transform.position)			= Library.WorldToCanvasPoint( WorldMap().Camera(), Canvas(), (airplane.Transform().position) );
		(transform.localEulerAngles)	= new Vector3();
		(transform.localScale)			= new Vector3( (0.35f), (0.35f), (1f) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(airplane.data.image)			= (transform);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	/*
	//활성화를 설정하기 위한 함수
	void Enable( bool enable=true )
	{
		if( enabled!=enable )
		{
			enabled = enable;
		}
	}
	*/

	//-------------------------------------------------------------------------------------------------------------------------------
	// 비행기 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objAirplane Airplane()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.airplane);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 비행기 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void AirplaneRelease()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Airplane()!=(null) )
		{
			GameObject.Destroy( Airplane()._GameObject() );
			(data.airplane)	= (null);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 비활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool Active()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		CApp.This.ViewTop.data.business.Toggle().Inactive();
		CApp.This.ViewTop.data.world.Toggle().Active();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( WorldMap()!=(null) )
		{
			WorldMap().Active();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return base.Active();
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 비활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool Inactive()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( WorldMap()!=(null) )
		{
			WorldMap().Inactive();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return base.Inactive();
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 취소 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONCANCEL( CANCEL Cancel )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONCONTROL( objControl control, CONTROL_ACTION Action, tagFocus focus )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(null) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( uiWorldMapCityPin icon in GetList() )
		{
			if( (control)==icon.Control() && (Action)==(CONTROL_ACTION.SELECT) )
			{
				app.ViewCity.ON( icon.Get() );
				return true;
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 메모리를 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void Unloader()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void Loader()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		base.Loader( Resources.Load("ApplicationLoader/View/ViewWorldMap"), (play.uiCanvas) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------