using System.Collections;
using System.Collections.Generic;
using System;
using UnityEngine.UI;
using UnityEngine;

//-----------------------------------------------------------------------------------------------------------------------------------
// 서비스 구매를 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class CViewPurchase : ViewPanel
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData : _tagData
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public Text						subject				= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public objControl				item				= (null);
		public objControl				service				= (null);
		public objControl				coin				= (null);
		public objControl				pet					= (null);
		public objControl				character_card		= (null);
		public objControl				storage				= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public List<objScrollItem>		Items			= new List<objScrollItem>();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public tagPurchase				purchase		= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public GameObject				sample			= (null);
		public GameObject				sampleItem		= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	};
	public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ON( UPDATE_TYPE Type=(UPDATE_TYPE.Nothing), GameObject sample=(null), GameObject sampleItem=(null), bool activeFinance=(true), Action<object, object> func=(null), object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		if( (sample)==(null) ) return false;		//(NULL)값을 허용함
//		if( (sampleItem)==(null) ) return false;	//(NULL)값을 허용함
//		if( (func)==(null) ) return false;			//(NULL)값을 허용함
//		if( (wParam)==(null) ) return false;		//(NULL)값을 허용함
//		if( (lParam)==(null) ) return false;		//(NULL)값을 허용함

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.sample)		= (sample);
		(data.sampleItem)	= (sampleItem);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( base.ON(data) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			ForeBack();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (func)!=(null) )
			{
				func( (wParam), (lParam) );
				Sort();
			}
			else
			{
				CategoryAndDownload( Type );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		/*
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !app.Game.Is() || app.Player.Character()==(null) )
		{
			data.coin.Alpha( 0.5f );
		}
		else
		{
			data.coin.Alpha( 1f );
		}
		*/

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( activeFinance )
		{
//			app.ViewFinance.ON( this );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return true;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 비활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool OFF()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Is() )
		{
			GetList().Clear();
//			app.ViewFinance.OFF( this );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return base.OFF();
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스가 전면에 출력되었을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void ONFORE()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		app.ViewFinance.Fore();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 제목을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Subject( UPDATE_TYPE Type )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		string		subject		= (null);
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		switch( Type )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// 서비스 구매 (SERVICE)
			//-----------------------------------------------------------------------------------------------------------------------
			case (UPDATE_TYPE.Service):
//				(subject)		= (TEXT.서비스_구매);
				break;

			//-----------------------------------------------------------------------------------------------------------------------
			// 코인 구매 (COIN)
			//-----------------------------------------------------------------------------------------------------------------------
			case (UPDATE_TYPE.Coin):
//				(subject)		= (TEXT.코인_구매);
				break;

			//-----------------------------------------------------------------------------------------------------------------------
			// 아이템 구매 (ITEM)
			//-----------------------------------------------------------------------------------------------------------------------
			default:
//				(subject)		= (TEXT.아이템_구매);
				break;

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.subject.text)		= app.Language.Get(subject);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 카테고리를 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Category( UPDATE_TYPE Type=(UPDATE_TYPE.Nothing) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Subject( Type );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Func.ChildsDestroy( ScrollView().Content() );
		GetList().Clear();
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagPurchase purchase in app.Purchase.GetList() )
		{
			if( (purchase.Type)==(Type) && (purchase.visible) && (purchase.sale) )
			{
				Register( purchase );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Sort();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 리스트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	List<objScrollItem> GetList()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.Items);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Register( tagPurchase purchase )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (purchase)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		GameObject		sample			= (data.sampleItem);
		if( (sample)==(null) )
		{
			(sample)	= (Resources.Load(PATH.UI_PURCHASE_ITEM) as GameObject);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		objScrollItem	scrollItem		= (Func.Create( ScrollView().Content(), (sample) ).GetComponent(typeof(objScrollItem)) as objScrollItem);
		if( (scrollItem)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			scrollItem.SetObject( purchase );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(scrollItem.Text().text)	= app.Language.Get(purchase.Name());
//			(scrollItem.Value().text)	= Func.Script( app.Language.Get(TEXT.__큐브), Func.NumberFormat(purchase.cash) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			uiIcon		icon		= (scrollItem.GetComponentInChildren(typeof(uiIcon)) as uiIcon);
			if( (icon)!=(null) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				icon.Set( purchase );

				/*
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (scrollItem.Text().preferredHeight)<(100) )
				{
					(icon.Transform().localPosition)	+= new Vector3( (0), (25), (0) );
				}
				*/

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			GetList().Add( scrollItem );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 리스트를 정렬하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Sort()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		objScrollItem		temp			= (null);
		tagPurchase			purchase1		= (null);
		tagPurchase			purchase2		= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		for( int i=0; i<(GetList().Count)-(1); i++ )
		{
			for( int j=(i+1); j<(GetList().Count); j++ )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(purchase1)		= (tagPurchase)GetList()[i].GetObject();
				(purchase2)		= (tagPurchase)GetList()[j].GetObject();

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (purchase1.cash)>(purchase2.cash) )
				{
					(temp)			= GetList()[i];
					GetList()[i]	= GetList()[j];	
					GetList()[j]	= (temp);
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		for( int i=0; i<(GetList().Count); i++ )
		{
			GetList()[i].Transform().SetSiblingIndex(i);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		ScrollView().Init();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void funcON( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (wParam)!=(null) )
		{
			ON( (UPDATE_TYPE)(wParam) );
		}
		else
		{
			ON();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void funcCategory( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (wParam)!=(null) )
		{
			Category( (UPDATE_TYPE)(wParam) );
		}
		else
		{
			Category();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 카테고리를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void CategoryAndDownload( UPDATE_TYPE Type )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Download.Indigator();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagPurchase purchase in app.Purchase.GetList() )
		{
			if( (Type)==(purchase.Type) )
			{
				app.Purchase.Download( purchase );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Download.SetCallback( (funcCategory), (Type) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void funcOnAndDownload( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Download.Indigator();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( tagPurchase purchase in app.Purchase.GetList() )
		{
			if( (wParam)!=(null) )
			{
				if( (UPDATE_TYPE)(wParam)==(purchase.Type) )
				{
					app.Purchase.Download( purchase );
				}
			}
			else
			{
				app.Purchase.Download( purchase );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Download.SetCallback( (funcON), (wParam), (lParam) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 제목 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Text Subject()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.subject);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 구매 객체를 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Set( tagPurchase purchase )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.purchase)		= (purchase);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	//선택된 구매 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public tagPurchase Get()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.purchase);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 취소 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONCANCEL( CANCEL Cancel )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Is() )
		{
			return base.ONCANCEL( Cancel );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONCONTROL( objControl control, CONTROL_ACTION Action, tagFocus focus )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(null) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagPurchase		purchase	= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( objScrollItem scrollItem in GetList() )
		{
			if( (control)==scrollItem.Control() && (Action)==(CONTROL_ACTION.SELECT) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(purchase)	= (scrollItem.GetObject() as tagPurchase);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (purchase)!=(null) )
				{
					if( Library.Is(purchase.url) )
					{
						Set( purchase );
						app.ViewBrowser.Purchase( purchase.url );
					}
					else
					{
						app.Purchase.Purchase( purchase );
					}
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				return true;
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 아이템 (ITEM)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.item) && (Action)==(CONTROL_ACTION.SELECT) )
		{
			CategoryAndDownload( UPDATE_TYPE.Nothing );
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 서비스 (SERVICE)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.service) && (Action)==(CONTROL_ACTION.SELECT) )
		{
			CategoryAndDownload( UPDATE_TYPE.Service );
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 코인 (COIN)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.coin) && (Action)==(CONTROL_ACTION.SELECT) )
		{
			/*
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( app.Game.Is() && app.Player.Character()!=(null) )
			{
				CategoryAndDownload( UPDATE_TYPE.Coin );
			}
			*/

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 장바구니 (STORAGE)
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(data.storage) && (Action)==(CONTROL_ACTION.SELECT) )
		{
//			app.ViewStorage.funcOnAndDownload();
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 메모리를 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void Unloader()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.subject)			= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.item)				= (null);
		(data.service)			= (null);
		(data.coin)				= (null);
		(data.pet)				= (null);
		(data.character_card)	= (null);
		(data.storage)			= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void Loader()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		GameObject		sample		= (data.sample);
		if( (sample)==(null) )
		{
			(sample)	= (Resources.Load("ApplicationLoader/View/ViewPurchase") as GameObject);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		base.Loader( (sample), MainUI.Canvas() );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.subject)			= (Func.Get( Transform(), "Subject" ).GetComponent(typeof(Text)) as Text);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.item)				= (Func.Get( Transform(), "Bottom/Item" ).GetComponent(typeof(objControl)) as objControl);
		(data.service)			= (Func.Get( Transform(), "Bottom/Service" ).GetComponent(typeof(objControl)) as objControl);
		(data.coin)				= (Func.Get( Transform(), "Bottom/Coin" ).GetComponent(typeof(objControl)) as objControl);
		(data.pet)				= (Func.Get( Transform(), "Bottom/Pet" ).GetComponent(typeof(objControl)) as objControl);
		(data.character_card)	= (Func.Get( Transform(), "Bottom/CharacterCard" ).GetComponent(typeof(objControl)) as objControl);
		(data.storage)			= (Func.Get( Transform(), "Bottom/Storage" ).GetComponent(typeof(objControl)) as objControl);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------