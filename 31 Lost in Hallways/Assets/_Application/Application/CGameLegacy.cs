using UnityEngine;

//게임 정보를 처리하기 위한 클래스
public abstract class CGameLegacy : GameBehaviour
{
	//인터페이스를 활성화 하기 위한 함수
	public virtual void ON()
	{
		/*
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		play.skyCanvas.Active();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		app.ViewLoading.ON( app.Game );
//		app.ViewLoading.ON( (app.Character), app.Language.Get(TEXT.공장의_생산_라인을_가동_중입니다) );
//		app.ViewLoading.ON( app.Structure );
//		app.ViewLoading.ON( (app.Map), app.Language.Get(TEXT.사업체의_손익_보고서를_분석_중입니다) );
		app.Download.Loading();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Func.LoadScene( (SceneLevel.WorldMap), (funcSceneLoadEnd) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		app.Player.Set( app.CurrencyStatic.Find("f727753aa58ebgg6ag5c") );	//달러
//		app.Player.Set( app.CurrencyStatic.Find("eg6d34d5cca18189ae62") );	//원

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		StandardLoad();

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		app.Download.SetCallback( funcDownloadEnd );
		app.ViewLoading.SetCallback( funcStart );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		Init();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.ViewBottom.ON();
		app.ViewTop.ON();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		app.Timeout.Register( (TIMEOUT.BRONZE_UPDATE),		(60),	(app.Coin.BronzeUpdate) );
//		app.Timeout.Register( (TIMEOUT.CHARACTER_UPDATE),	(60*5),	(app.Player.funcCharacterUpdate) );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		(data.stateOnActivate)	= (true);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		*/
	}

	void CreateCreate( GameObject sample )
	{
		if( sample==null ) return;
		Library.Create( null, sample );
	}

	void Create( int min, int max )
	{
		for( int x=min; x<=max; x++ )
		{
			for( int y=min; y<=max; y++ )
			{
				CreateTile( x, y );
			}
		}

		for( int i=0; i<300; i++ )
		{
			CreateTree( Library.Randomf(min, max)*5f, Library.Randomf(min, max)*5f );
		}
	}

	void CreateTile( float x, float y )
	{
		Transform transform = null;
		if( Library.Random(50) )
		{
			transform = Library.Create( play._Scene, Resources.Load("Tiles/Floor_Grass_v1_1") );
		}
		else
		{
			transform = Library.Create( play._Scene, Resources.Load("Tiles/Floor_Grass_v1_2") );
		}

		if( transform!=null )
		{
			transform.localPosition = new Vector3( x*6.853786f, 0f, y*6.853786f );
		}
	}

	void CreateTree( float x, float y )
	{
		Transform transform = Library.Create( play._Scene, Resources.Load("Objects/Tree") );
		if( transform!=null )
		{
			transform.localPosition = new Vector3( x, 0f, y );
		}
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 비활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void OFF()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		app.Coin.BronzeUpdate();
//		app.Player.CharacterUpdate();	//로그아웃 작업을 하면서 이미 처리되었으므로, 다시 처리할 필요가 없음

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		app.Timeout.Release( TIMEOUT.BRONZE_UPDATE );
		app.Timeout.Release( TIMEOUT.CHARACTER_UPDATE );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		app.ViewTop.OFF();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Effect.Release();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		Func.UnloadScene( SceneLevel.WorldMap );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 움직임을 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void _Action()
	{
		/*
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.CreatureDecision._Decision();
		app.CharacterDecision._Decision();
		app.CharacterAI._AI();
		app.Character._Action();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Creature._Action();
		app.Coin._Action();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Player._Action();
		app.Member._Action();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !app.ViewLoading.Is() )
		{
			app.Meter.ON( app.Player.GetPosition() );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		*/
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 리소스를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void StandardLoad()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		app.NationStatic.CorverTextureAllDownload();
//		app.BusinessStatic.CorverTextureAllDownload();
//		app.DepartmentStatic.CorverTextureAllDownload();

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void funcDownloadEnd( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
//		app.ViewLoading.OFF( app.Character );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 움직임을 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Init()
	{
		/*
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		app.Map.ObjectInit();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.lights)	= Func.Create( (play._System), new Vector3(), new Vector3(90,0,0), new Vector3(), (Resources.Load(PATH.LIGHTS) as GameObject) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(app.Player.data.GPS)		= (Func.Create( (play.layerPlayers), new Vector3(), new Vector3(), new Vector3(), (Resources.Load(PATH.PLAYER_GPS) as GameObject) ).GetComponent(typeof(objGPS)) as objGPS);
		(app.Player.data.player)	= (Func.Create( (play.layerPlayers), new Vector3(), new Vector3(), new Vector3(), (Resources.Load(PATH.PLAYER) as GameObject) ).GetComponent(typeof(objPlayer)) as objPlayer);
		if( app.Player.Player()!=(null) )
		{
			app.Player.Player().Tracking().ON( app.Player.GPS().Transform() );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Player.CreateGuidCircle();
		
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (play.mainCamera)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(play.mainCamera.Transform().position)	= (app.Player.Player().Transform().position);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( play.mainCamera.Light()!=(null) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				play.mainCamera.Light( true );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(play.mainCamera.Light().type)		= (LightType.Spot);
				(play.mainCamera.Light().range)		= (30);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		app.Game.SightQuater( true );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		*/
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 왼쪽 버튼을 눌렀을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONLBUTTONDOWN( Vector3 point, TOUCH_INDEX touchIndex )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Func.Pick( (play.mainCamera), (play.pickingLayerMask) ) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			RaycastHit h = Func.GetRaycastHit();
			TouchInterface.Push().Set( (h.transform), (point) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( !TouchInterface.Push().Is() && !app.Panel.IsForeBack() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			SetAllowCameraAsync( false );
			TouchInterface.Push().Set( (this), (point) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 왼쪽 버튼을 뗬을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override bool ONLBUTTONUP( Vector2 point )
	{
		/*
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Func.Pick( (play.mainCamera), (play.pickingLayerMask) ) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			RaycastHit	h	= Func.GetRaycastHit();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( play.Push.Is(h.transform) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				objStatic	objstatic	= (null);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (h.transform.gameObject.layer)==(LAYER.OBJECT) )
				{
					(objstatic)		= (h.transform.GetComponentInParent(typeof(objStatic)) as objStatic);
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( app.Player.Character().IsInability() )
				{
					//행동 불능 상태
				}
				else
				if( (objstatic)!=(null) && objstatic.Structure()!=(null) && !app.Player.IsInnerCommandDistance(h.transform.position) )
				{
					if( app.ViewStructure.ON( objstatic.GetComponent(typeof(objStructure)) as objStructure ) )
					{
						Debug.Log( (objstatic), (objstatic) );
					}
				}
				else
				if( app.ViewItemDrop.IsItem() )
				{
					AlertInventoryOver();
				}
				else
				if( app.Player.Hungry().Normalize()<=(0) )
				{
					AlertHungry();
				}
				else
				if( app.Player.IsInnerCommandDistance(h.transform.position) )
				{
					ONPICK( (h.transform), (h.transform.gameObject), (objstatic) );
				}
				else
				{
					AlertFar();
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				return true;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( play.Push.Is(this) && !app.Panel.IsForeBack() && Vector2.Distance( (play.Push.point), (point) )<Func.GetDragDistance() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( app.Player.Character().IsInability() )
			{
				//행동 불능 상태
			}
			else
			if( app.ViewItemDrop.IsItem() )
			{
				AlertInventoryOver();
			}
			else
			if( app.Player.Hungry().Normalize()<=(0) )
			{
				AlertHungry();
			}
			else
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				Vector3		vPos	= app.Map.GetPickPoint(point);
				if( app.Player.IsInnerCommandDistance(vPos) )
				{
					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					app.SoundStatic.Play( SOUND.이동 );
					app.EffectStatic.Play( (EFFECT.이동_포인트), (vPos) );

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					app.Player.Move(vPos);
					app.Player.SetContact(null);

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
				}
				else
				{
					/#
					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					if( CEngine.IsEditor() )
					{
						//-----------------------------------------------------------------------------------------------------------
						// -
						//-----------------------------------------------------------------------------------------------------------
						play.mainCamera.Tracking().ON( null );
						play.mainCamera.Move().ON( vPos );

						//-----------------------------------------------------------------------------------------------------------
						// -
						//-----------------------------------------------------------------------------------------------------------
						tagGPS		gps		= app.Map.GetGeoPoint(vPos);
						app.Engine.LoadPlaces( (gps.lat), (gps.lng), (false) );

						//-----------------------------------------------------------------------------------------------------------
						// -
						//-----------------------------------------------------------------------------------------------------------
					}
					#/

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					AlertFar();

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}
		*/

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 오른쪽 버튼을 눌렀을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONRBUTTONDOWN( Vector3 point )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Platform.IsDesktop() && !app.Engine.IsInterfaceWait() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Func.Pick( (play.mainCamera), (play.pickingLayerMask) ) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				RaycastHit h = Func.GetRaycastHit();
				TouchInterface.Context().Set( (h.transform), (point) );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				return true;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( !TouchInterface.Context().Is() )
			{
				TouchInterface.Context().Set( (this), (point) );
				return true;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 오른쪽 버튼을 뗬을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONRBUTTONUP( Vector3 point )
	{
		/*
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Library.IsDesktop() && !app.Engine.IsInterfaceWait() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Func.Pick( (play.mainCamera), (play.pickingLayerMask) ) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				RaycastHit	h	= Func.GetRaycastHit();

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( play.Context.Is(h.transform) )
				{
					ONCONTEXT( h.transform );
					return true;
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			if( play.Context.Is(this) )		//오브젝트 픽킹이 통과되었을 때 맵 픽킹을 실행하기 위하 조건식을 비활성화 함
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				Vector3		vPos	= app.Map.GetPickPoint(point);
				app.Player.GPS().ON( vPos );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				app.Player.GPS().MovePositionMarker( vPos );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				return true;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		*/

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void ONCONTEXT( Transform transform )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (transform)==(null) ) return;

		/*
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		GameObject	gameObject	= (transform.gameObject);

        //---------------------------------------------------------------------------------------------------------------------------
        // 캐릭터
        //---------------------------------------------------------------------------------------------------------------------------
		if( (gameObject.layer)==(LAYER.CHARACTER) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			objCharacter	character	= (transform.GetComponentInParent(typeof(objCharacter)) as objCharacter);
			if( (character)!=(null) )
			{
				app.ViewCharacter.ON( character.Info(), (character) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		*/

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 롤오버 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONROLLOVER( Vector3 point )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 왼쪽 버튼을 드래그 했을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONDRAG_CONTEXT( Vector3 point, TOUCH_INDEX touchIndex )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		/*
		if( app.Pillar.ONDRAG_ANGLE( app.Pillar.Player(), (point), (touchIndex) ) )
		{
			return true;
		}
		*/

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 가운데 버튼을 드래그 했을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONDRAG_WHEEL( Vector3 point, TOUCH_INDEX touchIndex )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 멀티 터치를 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public bool ONMULTI_TOUCH_DOWN( Vector3 point, tagFocus touch )
    {
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (touch)==(null) ) return false;

		/*
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( IsPush() && !touch.Is() && (touch.index)==(TOUCH_INDEX.CONTEXT) )
		{
			play.Push.Set( Camera().Zoom(), (play.Push.point) );
			touch.Set( Camera().Zoom(), (point) );
			(play.DragStartLength)	= Vector3.Distance( (play.Push.point), (point) );
			(play.ZoomStartValue)	= Camera().GetFieldOfView();
			return true;
		}
		*/

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return false;
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 멀티 드래그를 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public bool ONMULTI_TOUCH_DRAG( Vector3 point, tagFocus touch )
    {
		/*
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( play.Push.Is(Camera().Zoom()) && play.Context.Is(Camera().Zoom()) && (touch.index)==(TOUCH_INDEX.CONTEXT) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			float	DragLength		= Vector3.Distance( (play.Push.point), (point) );
			float	fZoom			= (play.ZoomStartValue) * Func.Divide(( play.DragStartLength), (DragLength) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			Zoom( fZoom );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			touch.Set(point);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}
		*/

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return false;
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONWHEEL( float fWheel )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( app.Engine.IsInterfaceWait() ) return false;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Is() && app.ViewWorldMap.Is() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			Zoom( app.ViewWorldMap.Camera().GetFieldOfView()-(fWheel*50) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return true;
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 엔터 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONRETURN()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 삭제 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONDELETE()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void AlertHungry()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		app.ViewAlert.ON( app.Language.Get(TEXT.배고픈_상태에선_명령을_내릴_수_없습니다) );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스가 활성화 되어 있는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool Is()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (play.Scene)==(SCENE.PLAY) )
		{
			return true;
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	public void funcStart( object wParam=null, object lParam=null )
	{
		Library.Create( play._System, "ApplicationLoader/Objects/System/mainCamera" );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public string GetRank( float value )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		switch( value )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// F랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (1):
				return "F";

			//-----------------------------------------------------------------------------------------------------------------------
			// E랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (2):
				return "E";

			//-----------------------------------------------------------------------------------------------------------------------
			// D랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (3):
				return "D";

			//-----------------------------------------------------------------------------------------------------------------------
			// C랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (4):
				return "C";

			//-----------------------------------------------------------------------------------------------------------------------
			// B랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (5):
				return "B";

			//-----------------------------------------------------------------------------------------------------------------------
			// A랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (6):
				return "A";

			//-----------------------------------------------------------------------------------------------------------------------
			// 9랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (7):
				return "9";

			//-----------------------------------------------------------------------------------------------------------------------
			// 8랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (8):
				return "8";

			//-----------------------------------------------------------------------------------------------------------------------
			// 7랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (9):
				return "7";

			//-----------------------------------------------------------------------------------------------------------------------
			// 6랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (10):
				return "6";

			//-----------------------------------------------------------------------------------------------------------------------
			// 5랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (11):
				return "5";

			//-----------------------------------------------------------------------------------------------------------------------
			// 4랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (12):
				return "4";

			//-----------------------------------------------------------------------------------------------------------------------
			// 3랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (13):
				return "3";

			//-----------------------------------------------------------------------------------------------------------------------
			// 2랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (14):
				return "2";

			//-----------------------------------------------------------------------------------------------------------------------
			// 1랭크
			//-----------------------------------------------------------------------------------------------------------------------
			case (15):
				return "1";

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return "-";
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 튜토리얼을 모두 완료했는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool IsTutorialClear()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( app.Memorize.Is( (MEMORIZE.TUTORIAL), TUTORIAL.END.ToString() ) )
		{
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}
}