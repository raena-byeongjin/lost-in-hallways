using System;
using UnityEngine.EventSystems;
using UnityEngine;

//어플리케이션 정보를 처리하기 위한 클래스
public class CApp : ApplicationBehaviourBase
{
	public tagSystem system = new tagSystem();

	void Update()
	{
		Engine.TimeUpdate();

		MessageQueue.Process();		//예약 메세지를 실행함
		Timeout.Process();

		Process();

		if( play.allowUserInput )
		{
			Proc();
			Key();
		}
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 입력된 정보에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Proc()
	{
#if UNITY_EDITOR || UNITY_STANDALONE
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (EventSystem.current.currentSelectedGameObject)==(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Input.GetMouseButtonDown(0) )
			{
				ONLBUTTONDOWN( (Input.mousePosition), (TOUCH_INDEX.FIRST) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Input.GetMouseButtonUp(0) )
			{
				ONLBUTTONUP( (Input.mousePosition), (TOUCH_INDEX.FIRST) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		{
			Canvas.Proc();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetMouseButtonDown(1) )
		{
			ONRBUTTONDOWN( (Input.mousePosition), (TOUCH_INDEX.CONTEXT) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetMouseButtonUp(1) )
		{
			ONRBUTTONUP( (Input.mousePosition), (TOUCH_INDEX.CONTEXT) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetMouseButtonDown(2) )
		{
			ONMBUTTONDOWN( (Input.mousePosition), (TOUCH_INDEX.WHEEL) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetMouseButtonUp(2) )
		{
			ONMBUTTONUP( (Input.mousePosition), (TOUCH_INDEX.WHEEL) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (play.mousePosition)!=(Input.mousePosition) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			ONMOUSEMOVE( (Input.mousePosition), (TOUCH_INDEX.FIRST) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Input.GetMouseButton(0) || Input.GetMouseButton(1) || Input.GetMouseButton(2) )
			{
				ONDRAG( (Input.mousePosition), (TOUCH_INDEX.FIRST) );
				(play.drag_x)	= (int)(Input.mousePosition.x);
				(play.drag_y)	= (int)(Input.mousePosition.y);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 마우스 휠을 처리함
		//---------------------------------------------------------------------------------------------------------------------------
		float	fWheel	= Input.GetAxis("Mouse ScrollWheel");
		if( (fWheel)!=(0) )
		{
			Browser.ONWHEEL( fWheel );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
#else
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		TouchAction();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
#endif
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 푸쉬 입력을 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Push()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetMouseButtonDown(0) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			GameObject obj = Canvas.Pick( Input.mousePosition );
			if( (obj)!=(null) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( TouchInterface.Push().time!=Time.time )
				{
					TouchInterface.Push().Reset();
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( !ONCLICK( (obj), (CONTROL_ACTION.LBUTTONDOWN) ) )
				{
					objControl	control		= (obj.GetComponent(typeof(objControl)) as objControl);
					if( (control)!=(null) )
					{
						ONCONTROL( (control), (CONTROL_ACTION.LBUTTONDOWN) );
					}
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetMouseButtonUp(0) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			GameObject	obj		= Canvas.Pick( Input.mousePosition );
			if( (obj)!=(null) )
			{
				objControl	control		= (obj.GetComponent(typeof(objControl)) as objControl);
				if( (control)!=(null) )
				{
					ONCONTROL( (control), (CONTROL_ACTION.LBUTTONUP) );
				}
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			EventSystem.current.SetSelectedGameObject( null );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 왼쪽 버튼을 눌렀을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONLBUTTONDOWN( Vector3 point, TOUCH_INDEX touchIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Camera.Ray( point );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(play.mousePosition)	= (point);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		while( true )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( play.Focus.Is() ) play.Focus.Reset();
			if( TouchInterface.Push().time!=Time.time ) TouchInterface.Push().Reset();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			TouchInterface.Push().Set( point );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(play.drag_length)	= (0);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			Push();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Confirm.Is() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
//				if( Confirm.ONLBUTTONDOWN(point) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			else
			if( !TouchInterface.Push().Is() )
			{
				/*
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( ViewConverse.Is() )
				{
					ViewConverse.ONLBUTTONDOWN( (point), (touchIndex) );
					break;
				}
				*/

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( Panel.ONLBUTTONDOWN( (point), (touchIndex) ) ) break;
//				if( Control.ONLBUTTONDOWN( point ) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( Browser.ONLBUTTONDOWN( (point), (touchIndex) ) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			break;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//마우스 왼쪽 버튼을 뗬을 때 반응하기 위한 함수
	void ONLBUTTONUP( Vector2 point, TOUCH_INDEX touchIndex )
	{
		Camera.Ray( point );

		play.mousePosition = point;

		while( true )
		{
			GameObject obj = Canvas.Pick( point );
			if( obj!=null )
			{
				if( ONCLICK( obj, CONTROL_ACTION.LBUTTONUP ) )
				{
					break;
				}
			}
			
			if( ONLBUTTONUP_( point, touchIndex ) )
			{
				break;
			}

			break;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( TouchInterface.Push().Is() )
		{
			TouchInterface.Push().Reset();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( play.Rollover.Is() )
		{
			Func.BroadCast( (play.Rollover.Get() as Component), "unRollOver" );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//마우스 왼쪽 버튼을 뗬을 때 반응하기 위한 함수
	bool ONLBUTTONUP_( Vector2 point, TOUCH_INDEX touchIndex )
	{
		if( Confirm.Is() )
		{
			if( Confirm.ONLBUTTONUP( point, touchIndex ) ) return true;
		}
		else
		{
			/*
			if( ViewConverse.Is() )
			{
				ViewConverse.ONLBUTTONUP( point, touchIndex );
				break;
			}
			*/

			if( Panel.ONLBUTTONUP( point, touchIndex ) ) return true;
//			if( Control.ONLBUTTONUP( point ) ) break;

			foreach( SceneFramework sceneframework in SceneFramework.SceneFrameworks )
			{
				if( sceneframework.nScene==play.Scene )
				{
					if( sceneframework.ONLBUTTONUP( point, TouchInterface.GetTouch(touchIndex) ) ) return true;
				}
			}

			if( Browser.ONLBUTTONUP(point) ) return true;
		}

		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 왼쪽 버튼을 눌렀을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONRBUTTONDOWN( Vector3 point, TOUCH_INDEX touchIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Camera.Ray( point );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(play.mousePosition)	= (point);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		while( true )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			TouchInterface.Context().Reset();
			TouchInterface.Context().Set(point);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			(play.Context.length)	= (0);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			GameObject	obj		= Canvas.Pick( point );
			if( (obj)!=(null) )
			{
				if( ONCLICK( (obj), (CONTROL_ACTION.RBUTTONDOWN) ) )
				{
					break;
				}
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Confirm.Is() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
//				if( Confirm.ONRBUTTONDOWN(point) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			else
			if( !TouchInterface.Context().Is() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( Panel.ONRBUTTONDOWN( (point), (touchIndex) ) ) break;
//				if( Control.ONRBUTTONDOWN( point ) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( Browser.ONRBUTTONDOWN(point) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			break;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 왼쪽 버튼을 뗬을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONRBUTTONUP( Vector3 point, TOUCH_INDEX touchIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Camera.Ray( point );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(play.mousePosition)	= (point);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		while( true )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			GameObject	obj		= Canvas.Pick( point );
			if( (obj)!=(null) )
			{
				if( ONCLICK( (obj), (CONTROL_ACTION.RBUTTONUP) ) )
				{
					break;
				}
			}

			/*
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( !play.Context.Is() || ( play.Context.Is(Game) && !play.Context.IsDragDistance(point) ) )
			{
				if( (Time.time)-(data.RBUTTON_CANCEL_TIME)>(0.1f) )
				{
					if( Browser.ONCANCEL(CANCEL.MOUSE_RBUTTON) )
					{
						(data.RBUTTON_CANCEL_TIME) = (Time.time);
						break;
					}
				}
			}
			*/

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Confirm.Is() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
//				if( Confirm.ONLBUTTONUP(point) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			else
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( Panel.ONRBUTTONUP( (point), (touchIndex) ) ) break;
//				if( Control.ONRBUTTONUP( point ) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( Browser.ONRBUTTONUP(point) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			break;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		TouchInterface.Context().Reset();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 가운데 버튼을 눌렀을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONMBUTTONDOWN( Vector3 point, TOUCH_INDEX touchIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Camera.Ray( point );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		while( true )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			TouchInterface.Wheel().Reset();
			TouchInterface.Wheel().Set(point);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			(play.Wheel.length)	= (0);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Confirm.Is() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
//				if( Confirm.ONLBUTTONDOWN(point) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			else
			if( !TouchInterface.Wheel().Is() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
//				if( Panel.ONLBUTTONDOWN( point ) ) break;
//				if( Control.ONLBUTTONDOWN( point ) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
//				if( Browser.ONRBUTTONDOWN(point) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			break;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 가운데 버튼을 뗬을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONMBUTTONUP( Vector3 point, TOUCH_INDEX touchIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Camera.Ray( point );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		while( true )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Confirm.Is() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
//				if( Confirm.ONLBUTTONUP(point) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			else
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
//				if( Panel.ONLBUTTONUP( point ) ) break;
//				if( Control.ONLBUTTONUP( point ) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
//				if( Browser.ONRBUTTONUP(point) ) break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			break;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		TouchInterface.Wheel().Reset();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 멀티 터치를 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONMULTI_TOUCH_DOWN( Vector3 point, TOUCH_INDEX touchIndex )
	{
		/*
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagFocus	touch	= Engine.GetTouch(touchIndex);
		if( (touch)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			touch.Reset();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(touch.index)		= (touchIndex);
			(touch.point.x)		= (int)(point.x);
			(touch.point.y)		= (int)(point.y);
//			(touch.length)		= (0);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		while( true )
		{
			if( Browser.ONMULTI_TOUCH_DOWN( (point), (touch) ) ) break;
			break;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		*/
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 멀티 터치를 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONMULTI_TOUCH_UP( Vector3 point, TOUCH_INDEX touchIndex )
	{
		/*
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagFocus	touch	= Engine.GetTouch(touchIndex);
		if( (touch)!=(null) )
		{
			touch.Reset();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		*/
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 멀티 드래그를 처리하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONMULTI_TOUCH_DRAG( Vector3 point, TOUCH_INDEX touchIndex )
	{
		/*
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		tagFocus	touch	= Engine.GetTouch(touchIndex);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		while( true )
		{
			if( Browser.ONMULTI_TOUCH_DRAG( (point), (touch) ) ) break;
			break;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		*/
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 이동에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONMOUSEMOVE( Vector3 point, TOUCH_INDEX touchIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Camera.Ray( point );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Component   rollover    = (play.Rollover.Get() as Component);
		if( !Browser.ONROLLOVER(point) )
		{
			if( play.Rollover.Is() )
			{
				play.Rollover.Reset();
			}
		}

		if( (rollover)!=(Component)(play.Rollover.Get()) )
		{
			Func.BroadCast( (rollover), "unRollover" );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 이동에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void ONDRAG( Vector2 point, TOUCH_INDEX touchIndex )
	{	
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Camera.Ray( point );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (play.mousePosition)!=new Vector3() )
		{
			(play.drag_length)		+= Vector3.Distance( (play.mousePosition), (point) );
		}
		(play.mousePosition)	= (point);

#if UNITY_EDITOR || UNITY_STANDALONE
		//마우스 왼쪽 버튼 드래그
		if( Input.GetMouseButton(0) )
		{
//			ONDRAG( point, TouchInterface.GetTouch(touchIndex) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 마우스 오른쪽 버튼 드래그
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetMouseButton(1) )
		{
			Browser.ONDRAG_CONTEXT( (point), (TOUCH_INDEX.CONTEXT) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 마우스 휠 버튼 드래그
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetMouseButton(2) )
		{
			Browser.ONDRAG_WHEEL( (point), (TOUCH_INDEX.WHEEL) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
#else
		//---------------------------------------------------------------------------------------------------------------------------
		// 마우스 왼쪽 버튼 드래그
		//---------------------------------------------------------------------------------------------------------------------------
		Browser.ONDRAG( (point), (touchIndex) );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
#endif
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 컨트롤 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void ONCONTROL( objControl control, CONTROL_ACTION Action )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (control)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Panel.ONCONTROL( (control), (Action) ) )
		{
			return;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 오브젝트 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONCLICK( GameObject gameObject, CONTROL_ACTION Action )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (gameObject)==(null) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Panel.ONCLICK( (gameObject), (Action) ) )
		{
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 스위치 입력에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void ONSWITCH( uiSwitch objswitch )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (objswitch)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Panel.ONSWITCH(objswitch) )
		{
			return;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//터치 정보를 처리하기 위한 함수
	void TouchAction()
	{
		foreach( Touch touch in Input.touches )
		{
			if( (TOUCH_INDEX)touch.fingerId==TOUCH_INDEX.FIRST && EventSystem.current.currentSelectedGameObject!=null )
			{
				continue;
			}

			switch( touch.phase )
			{
				case TouchPhase.Began:
					if( (TOUCH_INDEX)touch.fingerId==TOUCH_INDEX.FIRST )
					{
						ONLBUTTONDOWN( touch.position, (TOUCH_INDEX)touch.fingerId );
					}
					else
					{
						ONMULTI_TOUCH_DOWN( touch.position, (TOUCH_INDEX)touch.fingerId );
					}
					break;

				case TouchPhase.Ended:
					if( (TOUCH_INDEX)touch.fingerId==TOUCH_INDEX.FIRST )
					{
					   ONLBUTTONUP( touch.position, (TOUCH_INDEX)touch.fingerId );
					}
					else
					{
						ONMULTI_TOUCH_UP( touch.position, (TOUCH_INDEX)touch.fingerId );
					}
					break;

				case TouchPhase.Moved:
					ONMOUSEMOVE( touch.position, (TOUCH_INDEX)touch.fingerId );
//					ONDRAG( touch.position, TouchInterface.GetTouch(touch.fingerId) );
					play.drag_x = (int)touch.position.x;
					play.drag_y = (int)touch.position.y;
					break;
			}
		}
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 입력된 정보에 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Key()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
#if UNITY_EDITOR || UNITY_STANDALONE
		if( Input.GetKeyUp(KeyCode.F12) )
		{
			Debug.Break();
		}
#endif

		//---------------------------------------------------------------------------------------------------------------------------
		// 일시정지 (SPACE)
		//---------------------------------------------------------------------------------------------------------------------------
		while( Input.GetKeyUp(KeyCode.Space) )
		{
//			if( Panel.ONPAUSE() ) break;
			if( Browser.ONPAUSE() ) break;
			break;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 삭제 (DELETE)
		//---------------------------------------------------------------------------------------------------------------------------
		while( Input.GetKeyUp(KeyCode.Delete) )
		{
//			if( Panel.ONDELETE() ) break;
			if( Browser.ONDELETE() ) break;
			break;
		}

		/*
		//---------------------------------------------------------------------------------------------------------------------------
		// 탈출 (ESCAPE)
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetKeyUp(KeyCode.Escape) )
		{
			Browser.ONCANCEL(CANCEL.ESCAPE);
		}
		*/

		//---------------------------------------------------------------------------------------------------------------------------
		// 엔터 (RETURN)
		//---------------------------------------------------------------------------------------------------------------------------
		if( Input.GetKeyUp(KeyCode.Return) )
		{
			Browser.ONRETURN();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Browser.Key();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	void Process()
	{
		Panel._Action();
		Browser.Process();
	}

//	[NonSerialized] public CPlay							play							= null;

	[NonSerialized] public CEngine							Engine							= null;
	[NonSerialized] public CMessageQueue					MessageQueue					= null;
	[NonSerialized] public CTimeout							Timeout							= null;
//	[NonSerialized] public CBrowser							Browser							= null;
	[NonSerialized] public CGame							Game							= null;

	[NonSerialized] public CCamera							Camera							= null;
	[NonSerialized] public CCanvas							Canvas							= null;
	[NonSerialized] public CPanel							Panel							= null;
	[NonSerialized] public CControl							Control							= null;
	[NonSerialized] public CConfirm							Confirm							= null;
	[NonSerialized] public CSound							Sound							= null;

	[NonSerialized] public CProgress						Progress						= null;
	[NonSerialized] public CDownload						Download						= null;
	[NonSerialized] public CReceive							Receive							= null;
	[NonSerialized] public CFacebook						Facebook						= null;
	[NonSerialized] public CLanguage						Language						= null;
	[NonSerialized] public CHistory							History							= null;
	[NonSerialized] public CAds								Ads								= null;

	[NonSerialized] public CAsset							Asset							= null;
	[NonSerialized] public CEffect							Effect							= null;

	[NonSerialized] public CAccount							Account							= null;
	[NonSerialized] public CIdentity						Identity						= null;
	[NonSerialized] public CMemorize						Memorize						= null;
	[NonSerialized] public CCash							Cash							= null;
	[NonSerialized] public CStock							Stock							= null;
	[NonSerialized] public CNotify							Notify							= null;

	[NonSerialized] public CEvent							Event							= null;
	[NonSerialized] public CEventQuery						EventQuery						= null;

	[NonSerialized] public CCity							City							= null;

	[NonSerialized] public CCompany							Company							= null;
	[NonSerialized] public CBusiness						Business						= null;
	[NonSerialized] public CPerson							Person							= null;
	[NonSerialized] public CDepartment						Department						= null;

	[NonSerialized] public CSceneTitle						SceneTitle						= null;

	[NonSerialized] public CViewBack						ViewBack						= null;
	[NonSerialized] public CViewIndigator					ViewIndigator					= null;
	[NonSerialized] public CViewBottom						ViewBottom						= null;
	[NonSerialized] public CViewTop							ViewTop							= null;
	[NonSerialized] public CViewAlert						ViewAlert						= null;
	[NonSerialized] public CViewLoading						ViewLoading						= null;

	[NonSerialized] public CViewPurchase					ViewPurchase					= null;
	[NonSerialized] public CViewPurchaseConfirm				ViewPurchaseConfirm				= null;
	[NonSerialized] public CViewApplicationContract			ViewApplicationContract			= null;
	[NonSerialized] public CViewBrowser						ViewBrowser						= null;
	[NonSerialized] public CViewAccount						ViewAccount						= null;
	[NonSerialized] public CViewNavigationBar				ViewNavigationBar				= null;
	[NonSerialized] public CViewNavigation					ViewNavigation					= null;
	[NonSerialized] public CViewNation						ViewNation						= null;
	[NonSerialized] public CViewCity						ViewCity						= null;
	[NonSerialized] public CViewTransferList				ViewTransferList				= null;
	[NonSerialized] public CViewIdentityList				ViewIdentityList				= null;
	[NonSerialized] public CViewBuildList					ViewBuildList					= null;
	[NonSerialized] public CViewDepartmentList				ViewDepartmentList				= null;
	[NonSerialized] public CViewBusinessList				ViewBusinessList				= null;
	[NonSerialized] public CViewBusiness					ViewBusiness					= null;
	[NonSerialized] public CViewManufactureList				ViewManufactureList				= null;
	[NonSerialized] public CViewCultureList					ViewCultureList					= null;
	[NonSerialized] public CViewIndustryEncyclopedia		ViewIndustryEncyclopedia		= null;
	[NonSerialized] public CViewIndustryEncyclopediaList	ViewIndustryEncyclopediaList	= null;
	[NonSerialized] public CViewIndustryList				ViewIndustryList				= null;
	[NonSerialized] public CViewProduct						ViewProduct						= null;
	[NonSerialized] public CViewCompanyList					ViewCompanyList					= null;
	[NonSerialized] public CViewCompany						ViewCompany						= null;
	[NonSerialized] public CViewProductStaticList			ViewProductStaticList			= null;
	[NonSerialized] public CViewProductList					ViewProductList					= null;
	[NonSerialized] public CViewBreedList					ViewBreedList					= null;
	[NonSerialized] public CViewPerson						ViewPerson						= null;
	[NonSerialized] public CViewPersonList					ViewPersonList					= null;
	[NonSerialized] public CViewAccountList					ViewAccountList					= null;
	[NonSerialized] public CViewInput						ViewInput						= null;
	[NonSerialized] public CViewHome						ViewHome						= null;
	[NonSerialized] public CViewTransportList				ViewTransportList				= null;
	[NonSerialized] public CViewAvatarModifier				ViewAvatarModifier				= null;
	[NonSerialized] public CViewStockInventory				ViewStockInventory				= null;
	[NonSerialized] public CViewStockMarket					ViewStockMarket					= null;
	[NonSerialized] public CViewStockList					ViewStockList					= null;
	[NonSerialized] public CViewWorldMap					ViewWorldMap					= null;
	[NonSerialized] public CViewDashboardBusiness			ViewDashboardBusiness			= null;
	[NonSerialized] public CViewWallet						ViewWallet						= null;
	[NonSerialized] public CViewFinance						ViewFinance						= null;
	[NonSerialized] public CViewNotifyList					ViewNotifyList					= null;
	[NonSerialized] public CViewBillionaireRank				ViewBillionaireRank				= null;

//	[NonSerialized] public CSoundStatic						SoundStatic						= null;
	[NonSerialized] public CResource						Resource						= null;
//	[NonSerialized] public CModel							Model							= null;
	[NonSerialized] public CPurchase						Purchase						= null;
	[NonSerialized] public CHelp							Help							= null;
	[NonSerialized] public CCharge							Charge							= null;

	[NonSerialized] public CContinentStatic					ContinentStatic					= null;
	[NonSerialized] public CRegionStatic					RegionStatic					= null;
	[NonSerialized] public CNationStatic					NationStatic					= null;
	[NonSerialized] public CCityStatic						CityStatic						= null;
	[NonSerialized] public CBusinessStatic					BusinessStatic					= null;
	[NonSerialized] public CDepartmentStatic				DepartmentStatic				= null;
	[NonSerialized] public CProductStatic					ProductStatic					= null;
	[NonSerialized] public CCurrencyStatic					CurrencyStatic					= null;
	[NonSerialized] public CAvatarStatic					AvatarStatic					= null;

	[NonSerialized] public CLoadCode						LoadCode						= null;

	protected override void Awake()
	{
		base.Awake();

		tagSystem.Init();

		if( PlayerPrefs.GetInt(PREFS.초기화)!=(1) )
		{
			Config.GPS_사용( true );
			Config.속도_측정_사용( true );
			Config.나침반_사용( true );
			Config.캐릭터_자동_복귀( true );
			Config.명령_범위_강조( false );
//			Config.거리_노출하지_않기( false );;		//서버에 저장됨
			Config.다른_사람의_프로필_사진_보지_않기( false );
			Config.시설물_이름_감추기( false );
//			Config.친구_검색에서_감추기( false );;		//서버에 저장됨
			Config.도움말_끄기( false );

			PlayerPrefs.SetInt( (PREFS.PLAYER_SEARCH_RANGE), (2) );

			PlayerPrefs.SetInt( (PREFS.초기화), (1) );
		}
		else
		{
			Config.GPS_사용( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.GPS_사용)) );
			Config.속도_측정_사용( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.속도_측정_사용)) );
			Config.나침반_사용( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.나침반_사용)) );
			Config.캐릭터_자동_복귀( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.캐릭터_자동_복귀)) );
			Config.명령_범위_강조( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.명령_범위_강조)) );
//			Config.거리_노출하지_않기( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.거리_노출하지_않기)) );			//서버에 저장됨
			Config.다른_사람의_프로필_사진_보지_않기( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.다른_사람의_프로필_사진_보지_않기)) );
			Config.시설물_이름_감추기( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.시설물_이름_감추기)) );
//			Config.친구_검색에서_감추기( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.친구_검색에서_감추기)) );		//서버에 저장됨
			Config.도움말_끄기( Func.IntToBoolean(PlayerPrefs.GetInt(PREFS.도움말_끄기)) );
		}

		play							= GetComponentInChildren(typeof(CPlay)) as CPlay;

		Engine							= GetComponentInChildren(typeof(CEngine)) as CEngine;
		MessageQueue					= GetComponentInChildren(typeof(CMessageQueue)) as CMessageQueue;
		Timeout							= GetComponentInChildren(typeof(CTimeout)) as CTimeout;
//		Browser							= GetComponentInChildren(typeof(CBrowser)) as CBrowser;
		Game							= GetComponentInChildren(typeof(CGame)) as CGame;

		Camera							= GetComponentInChildren(typeof(CCamera)) as CCamera;
		Canvas							= GetComponentInChildren(typeof(CCanvas)) as CCanvas;
		Panel							= GetComponentInChildren(typeof(CPanel)) as CPanel;
		Control							= GetComponentInChildren(typeof(CControl)) as CControl;
		Confirm							= GetComponentInChildren(typeof(CConfirm)) as CConfirm;
		Sound							= GetComponentInChildren(typeof(CSound)) as CSound;

		Progress						= GetComponentInChildren(typeof(CProgress)) as CProgress;
		Download						= GetComponentInChildren(typeof(CDownload)) as CDownload;
		Receive							= GetComponentInChildren(typeof(CReceive)) as CReceive;
		Facebook						= GetComponentInChildren(typeof(CFacebook)) as CFacebook;
		Language						= GetComponentInChildren(typeof(CLanguage)) as CLanguage;
		History							= GetComponentInChildren(typeof(CHistory)) as CHistory;
		Ads								= GetComponentInChildren(typeof(CAds)) as CAds;

		Asset							= GetComponentInChildren(typeof(CAsset)) as CAsset;
		Effect							= GetComponentInChildren(typeof(CEffect)) as CEffect;

		Account							= GetComponentInChildren(typeof(CAccount)) as CAccount;
		Identity						= GetComponentInChildren(typeof(CIdentity)) as CIdentity;
		Memorize						= GetComponentInChildren(typeof(CMemorize)) as CMemorize;
		Cash							= GetComponentInChildren(typeof(CCash)) as CCash;
		Stock							= GetComponentInChildren(typeof(CStock)) as CStock;
		Notify							= GetComponentInChildren(typeof(CNotify)) as CNotify;

		EventQuery						= GetComponentInChildren(typeof(CEventQuery)) as CEventQuery;
		Event							= GetComponentInChildren(typeof(CEvent)) as CEvent;

		City							= GetComponentInChildren(typeof(CCity)) as CCity;

		Company							= GetComponentInChildren(typeof(CCompany)) as CCompany;
		Business						= GetComponentInChildren(typeof(CBusiness)) as CBusiness;
		Department						= GetComponentInChildren(typeof(CDepartment)) as CDepartment;
		Person							= GetComponentInChildren(typeof(CPerson)) as CPerson;

		SceneTitle						= GetComponentInChildren(typeof(CSceneTitle)) as CSceneTitle;

		ViewBack						= GetComponentInChildren(typeof(CViewBack)) as CViewBack;
		ViewIndigator					= GetComponentInChildren(typeof(CViewIndigator)) as CViewIndigator;
		ViewBottom						= GetComponentInChildren(typeof(CViewBottom)) as CViewBottom;
		ViewTop							= GetComponentInChildren(typeof(CViewTop)) as CViewTop;
		ViewAlert						= GetComponentInChildren(typeof(CViewAlert)) as CViewAlert;
		ViewLoading						= GetComponentInChildren(typeof(CViewLoading)) as CViewLoading;

		ViewPurchase					= GetComponentInChildren(typeof(CViewPurchase)) as CViewPurchase;
		ViewPurchaseConfirm				= GetComponentInChildren(typeof(CViewPurchaseConfirm)) as CViewPurchaseConfirm;
		ViewApplicationContract			= GetComponentInChildren(typeof(CViewApplicationContract)) as CViewApplicationContract;
		ViewBrowser						= GetComponentInChildren(typeof(CViewBrowser)) as CViewBrowser;
		ViewAccount						= GetComponentInChildren(typeof(CViewAccount)) as CViewAccount;
		ViewNavigationBar				= GetComponentInChildren(typeof(CViewNavigationBar)) as CViewNavigationBar;
		ViewNavigation					= GetComponentInChildren(typeof(CViewNavigation)) as CViewNavigation;
		ViewNation						= GetComponentInChildren(typeof(CViewNation)) as CViewNation;
		ViewCity						= GetComponentInChildren(typeof(CViewCity)) as CViewCity;
		ViewTransferList				= GetComponentInChildren(typeof(CViewTransferList)) as CViewTransferList;
		ViewIdentityList				= GetComponentInChildren(typeof(CViewIdentityList)) as CViewIdentityList;
		ViewBuildList					= GetComponentInChildren(typeof(CViewBuildList)) as CViewBuildList;
		ViewDepartmentList				= GetComponentInChildren(typeof(CViewDepartmentList)) as CViewDepartmentList;
		ViewBusinessList				= GetComponentInChildren(typeof(CViewBusinessList)) as CViewBusinessList;
		ViewBusiness					= GetComponentInChildren(typeof(CViewBusiness)) as CViewBusiness;
		ViewManufactureList				= GetComponentInChildren(typeof(CViewManufactureList)) as CViewManufactureList;
		ViewCultureList					= GetComponentInChildren(typeof(CViewCultureList)) as CViewCultureList;
		ViewIndustryEncyclopedia		= GetComponentInChildren(typeof(CViewIndustryEncyclopedia)) as CViewIndustryEncyclopedia;
		ViewIndustryEncyclopediaList	= GetComponentInChildren(typeof(CViewIndustryEncyclopediaList)) as CViewIndustryEncyclopediaList;
		ViewIndustryList				= GetComponentInChildren(typeof(CViewIndustryList)) as CViewIndustryList;
		ViewProduct						= GetComponentInChildren(typeof(CViewProduct)) as CViewProduct;
		ViewCompanyList					= GetComponentInChildren(typeof(CViewCompanyList)) as CViewCompanyList;
		ViewCompany						= GetComponentInChildren(typeof(CViewCompany)) as CViewCompany;
		ViewProductStaticList			= GetComponentInChildren(typeof(CViewProductStaticList)) as CViewProductStaticList;
		ViewProductList					= GetComponentInChildren(typeof(CViewProductList)) as CViewProductList;
		ViewBreedList					= GetComponentInChildren(typeof(CViewBreedList)) as CViewBreedList;
		ViewPerson						= GetComponentInChildren(typeof(CViewPerson)) as CViewPerson;
		ViewPersonList					= GetComponentInChildren(typeof(CViewPersonList)) as CViewPersonList;
		ViewAccountList					= GetComponentInChildren(typeof(CViewAccountList)) as CViewAccountList;
		ViewInput						= GetComponentInChildren(typeof(CViewInput)) as CViewInput;
		ViewHome						= GetComponentInChildren(typeof(CViewHome)) as CViewHome;
		ViewTransportList				= GetComponentInChildren(typeof(CViewTransportList)) as CViewTransportList;
		ViewAvatarModifier				= GetComponentInChildren(typeof(CViewAvatarModifier)) as CViewAvatarModifier;
		ViewStockInventory				= GetComponentInChildren(typeof(CViewStockInventory)) as CViewStockInventory;
		ViewStockMarket					= GetComponentInChildren(typeof(CViewStockMarket)) as CViewStockMarket;
		ViewStockList					= GetComponentInChildren(typeof(CViewStockList)) as CViewStockList;
		ViewWorldMap					= GetComponentInChildren(typeof(CViewWorldMap)) as CViewWorldMap;
		ViewDashboardBusiness			= GetComponentInChildren(typeof(CViewDashboardBusiness)) as CViewDashboardBusiness;
		ViewWallet						= GetComponentInChildren(typeof(CViewWallet)) as CViewWallet;
		ViewFinance						= GetComponentInChildren(typeof(CViewFinance)) as CViewFinance;
		ViewNotifyList					= GetComponentInChildren(typeof(CViewNotifyList)) as CViewNotifyList;
		ViewBillionaireRank				= GetComponentInChildren(typeof(CViewBillionaireRank)) as CViewBillionaireRank;

//		SoundStatic						= GetComponentInChildren(typeof(CSoundStatic)) as CSoundStatic;
		Resource						= GetComponentInChildren(typeof(CResource)) as CResource;
		Purchase						= GetComponentInChildren(typeof(CPurchase)) as CPurchase;
		Help							= GetComponentInChildren(typeof(CHelp)) as CHelp;
		Charge							= GetComponentInChildren(typeof(CCharge)) as CCharge;

		ContinentStatic					= GetComponentInChildren(typeof(CContinentStatic)) as CContinentStatic;
		RegionStatic					= GetComponentInChildren(typeof(CRegionStatic)) as CRegionStatic;
		NationStatic					= GetComponentInChildren(typeof(CNationStatic)) as CNationStatic;
		CityStatic						= GetComponentInChildren(typeof(CCityStatic)) as CCityStatic;
		BusinessStatic					= GetComponentInChildren(typeof(CBusinessStatic)) as CBusinessStatic;
		DepartmentStatic				= GetComponentInChildren(typeof(CDepartmentStatic)) as CDepartmentStatic;
		ProductStatic					= GetComponentInChildren(typeof(CProductStatic)) as CProductStatic;
		CurrencyStatic					= GetComponentInChildren(typeof(CCurrencyStatic)) as CCurrencyStatic;
		AvatarStatic					= GetComponentInChildren(typeof(CAvatarStatic)) as CAvatarStatic;

		LoadCode						= GetComponentInChildren(typeof(CLoadCode)) as CLoadCode;
	}
}