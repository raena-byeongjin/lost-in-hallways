using System.Collections;
using System.Collections.Generic;
using System.Xml;
using UnityEngine;

//-----------------------------------------------------------------------------------------------------------------------------------
// 애셋 정보를 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class CAsset : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	protected CApp		app			= (null);
	protected CPlay		play		= (null);

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void OnEnable()
	{
		(this.app)		= (CApp.This);
		(this.play)		= (CPlay.This);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void AssetComponent( Transform transform, GameObject gameObject )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (transform)==(null) ) return;
		if( (gameObject)==(null) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		Component[]		comArray	= transform.GetComponentsInChildren(typeof(AssetComponent));
		foreach( AssetComponent asset in comArray )
		{
			AssetComponent( (asset), (transform) );
			Component.Destroy( asset );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void AssetComponent( AssetComponent asset, Transform root )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (asset)==(null) ) return;
		if( (root)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		XmlDocument		xmlDoc			= CXml.Load(asset.xml);
		if( (xmlDoc)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Transform		transform		= (asset.transform);
		GameObject		gameObject		= (asset.gameObject);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		XmlNodeList		nodeList		= (xmlDoc.ChildNodes);
		XmlNode			pNode			= (null);
		for( int i=0; i<(nodeList.Count); i++ )
		{
			(pNode)		= nodeList.Item(i);
			if( (pNode)!=(null) )
			{
				/*
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (pNode.Name)=="Hand" )
				{
					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					Func.ComponentDestroy( asset.GetComponent(typeof(Renderer)) );
					Func.ComponentDestroy( asset.GetComponent(typeof(MeshFilter)) );
					Func.ComponentDestroy( asset.GetComponent(typeof(Collider)) );

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					(transform.localScale)		= new Vector3( (1), (1), (1) );

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					objCharacter	character	= (transform.GetComponentInParent(typeof(objCharacter)) as objCharacter);
					if( (character)!=(null) )
					{
						if( asset.value.ToLower()=="right" || asset.value.ToLower()=="r" )
						{
							(character.data.handRight)	= (gameObject.AddComponent(typeof(objHandRight)) as objHandRight);
						}
						else
						if( asset.value.ToLower()=="left" || asset.value.ToLower()=="l" )
						{
							(character.data.handLeft)	= (gameObject.AddComponent(typeof(objHandLeft)) as objHandLeft);
						}
					}

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
				}
				else
				*/
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (pNode.Name)=="Destroy" )
				{
					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					objDestroy		destroy		= (gameObject.AddComponent(typeof(objDestroy)) as objDestroy);
					if( (destroy)!=(null) )
					{
						if( Library.IsSingle(asset.value) )
						{
							//-------------------------------------------------------------------------------------------------------
							// -
							//-------------------------------------------------------------------------------------------------------
							(destroy.time)	= float.Parse(asset.value);

							//-------------------------------------------------------------------------------------------------------
							// -
							//-------------------------------------------------------------------------------------------------------
							if( (destroy.time)<=(0) )
							{
								GameObject.Destroy( gameObject );
							}

							//-------------------------------------------------------------------------------------------------------
							// -
							//-------------------------------------------------------------------------------------------------------
						}
					}

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
				}
				else
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (pNode.Name)!="xml" )
				{
#if !UNITY_EDITOR
					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					Func.ComponentDestroy( asset.GetComponent(typeof(Renderer)) );
					Func.ComponentDestroy( asset.GetComponent(typeof(MeshFilter)) );
					Func.ComponentDestroy( asset.GetComponent(typeof(Collider)) );
#endif

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
					Debug.Log(pNode.Name);

					//---------------------------------------------------------------------------------------------------------------
					// -
					//---------------------------------------------------------------------------------------------------------------
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
		}

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------