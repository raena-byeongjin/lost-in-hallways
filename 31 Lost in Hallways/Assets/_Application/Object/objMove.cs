using UnityEngine;
using System.Collections;
using System;

//-----------------------------------------------------------------------------------------------------------------------------------
// 이동 정보를 설정하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class objMove : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public Transform		transform			= (null);
		public RectTransform	rectTransform		= (null);
		public objLerp			lerp				= (null);
		public Vector3			vMove				= new Vector3();
		public Vector3			vStart				= new Vector3();
		public Vector3			vOrigin				= new Vector3();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public bool				Local				= (false);
		public bool				Destroy				= (false);
		public bool				UnscaleTime			= (false);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public float			Divide				= (10);
		public float			Min					= (0.1f);
		public float			Max					= (10);
		public float			delay				= (0);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public float			SpeedPerSecond		= (0);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public tagCallback		Callback			= new tagCallback();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}
	public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Awake()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(data.transform)		= (transform);
		(data.rectTransform)	= (GetComponent(typeof(RectTransform)) as RectTransform);
		if( (data.lerp)==(null) ) (data.lerp)	= (GetComponent(typeof(objLerp)) as objLerp);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(enabled)	= (false);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Update()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (data.delay)>(0) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( data.UnscaleTime )
			{
				(data.delay)	-= (Time.unscaledDeltaTime);
			}
			else
			{
				(data.delay)	-= (Time.deltaTime);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return;
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (data.lerp)!=(null) && data.lerp.IsAction() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( data.Local )
			{
				(Transform().localPosition)		= Vector3.Lerp( (data.vStart), (data.vMove), Lerp().Value() );
			}
			else
			{
				(Transform().position)			= Vector3.Lerp( (data.vStart), (data.vMove), Lerp().Value() );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			return;
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		Vector3 vDistance = (data.vMove) - GetPosition();
		float fMove = Library.Limit( (data.Min), (data.Max), Func.Divide( (vDistance.magnitude), (data.Divide) ) );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (vDistance.magnitude)>(fMove) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( data.Local )
			{
				(Transform().localPosition)		+= (vDistance.normalized) * (fMove) * Func.DeltaTime(data.UnscaleTime);
			}
			else
			{
				(Transform().position)			+= (vDistance.normalized) * (fMove) * Func.DeltaTime(data.UnscaleTime);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.SpeedPerSecond)	= (fMove);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( data.Local )
			{
				(Transform().localPosition)		= (data.vMove);
			}
			else
			{
				(Transform().position)			= (data.vMove);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.SpeedPerSecond)	= (0);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( data.Destroy )
			{
				Component.Destroy( this );
			}
			else
			{
				(enabled)	= (false);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// MOVE 객체와 연결된 다른 객체의 처리가 모두 완료된 다음에 로딩화면을 해제하기 위해
			// 메세지 큐로 넘겨서 콜백 함수를 실행함
			//-----------------------------------------------------------------------------------------------------------------------
			CApp.This.MessageQueue.ON( data.Callback );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 이동을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void ON( Vector3 vMove, Action<object, object> func=(null), object wParam=(null), object lParam=(null) )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( IsAction() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (data.lerp)==(null) || !data.lerp.IsAction() )
			{
				(data.vStart)	= GetPosition();
			}
			(data.vOrigin)		= (data.vStart);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.vMove)		= (vMove);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.vStart)	= GetPosition();
			(data.vOrigin)	= (data.vStart);
			(data.vMove)	= (vMove);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			data.Callback.Set( (func), (wParam), (lParam) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(enabled)		= (true);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 비활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void OFF()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(enabled)	= (false);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 트랜스폼 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Transform Transform()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.transform);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 트랜스폼 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public RectTransform _RectTransform()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.rectTransform);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 위치값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Vector3 GetPosition()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( data.Local )
		{
			return (Transform().localPosition);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (Transform().position);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 활성화되어 있는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool IsAction()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (isActiveAndEnabled);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 활성화되어 있는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public float GetLerpValue()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		float	fMax		= ((data.vMove - data.vStart).magnitude);
		float	fCurrent	= ((GetPosition() - data.vStart).magnitude);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (fMax)==(0) && (fCurrent)==(0) )
		{
			return (1f);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return Func.Divide( (fCurrent), (fMax) );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 활성화되어 있는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public float LerpOrigin()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		float	fMax		= ((data.vMove - data.vOrigin).magnitude);
		float	fCurrent	= ((GetPosition() - data.vOrigin).magnitude);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (fCurrent) / (fMax);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public float GetSpeedPerSecond()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.SpeedPerSecond);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Callback( Action<object, object> func, object wParam=(null), object lParam=(null) )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (func)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( enabled )
		{
			data.Callback.Set( (func), (wParam), (lParam) );
		}
		else
		{
			func( (wParam), (lParam) );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//Lerp 객체를 얻기 위한 함수
	public objLerp Lerp()
	{
		return data.lerp;
	}
}
