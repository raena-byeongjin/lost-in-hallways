using UnityEngine;
using System.Collections;

//-----------------------------------------------------------------------------------------------------------------------------------
// 배경을 처리하기 위한 함수
//-----------------------------------------------------------------------------------------------------------------------------------
public class objBack : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public Camera		camera			= (null);
		public Camera		renderCamera	= (null);
		public Transform	transform		= (null);
		public GameObject	gameObject		= (null);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}
	public tagData	data	= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Awake()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(data.transform)	= (transform);
		(data.gameObject)	= (gameObject);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Start()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (data.renderCamera)!=(null) )
		{
			(data.renderCamera.targetTexture)	= new RenderTexture( (Screen.width/8), (Screen.height/8), (24), (RenderTextureFormat.Default) );
			Material	mtrl	= ((GetComponentInChildren(typeof(Renderer)) as Renderer).material);
			if( (mtrl)!=(null) )
			{
				(data.renderCamera.targetTexture.filterMode)	= (FilterMode.Bilinear);
				(mtrl.mainTexture)	= (data.renderCamera.targetTexture);
			}
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Update()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		Vector3		vLeft		= Camera().ScreenToWorldPoint( new Vector3( (0), (Screen.height), (Camera().farClipPlane-Camera().nearClipPlane) ) );
		Vector3		vRight		= Camera().ScreenToWorldPoint( new Vector3( (Screen.width), (Screen.height), (Camera().farClipPlane-Camera().nearClipPlane) ) );
		Vector3		vBottom		= Camera().ScreenToWorldPoint( new Vector3( (0), (0), (Camera().farClipPlane-Camera().nearClipPlane) ) );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(data.transform.position)		= Camera().ScreenToWorldPoint( new Vector3( (Screen.width/2), (Screen.height/2), (Camera().farClipPlane-Camera().nearClipPlane) ) );
		(data.transform.localScale)		= new Vector3( Vector3.Distance(vLeft, vRight), Vector3.Distance(vLeft, vBottom), (1) );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void ON()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( _GameObject()!=(null) )
		{
			_GameObject().SetActive( true );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 비활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void OFF()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( _GameObject()!=(null) )
		{
			_GameObject().SetActive( false );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 카메라 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Camera Camera()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.camera);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 게임 오브젝트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public GameObject _GameObject()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.gameObject);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------