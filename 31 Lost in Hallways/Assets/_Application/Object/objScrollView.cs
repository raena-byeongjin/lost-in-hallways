using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------
public class objScrollView : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public Transform				transform			= (null);
		public RectTransform			rectTransform		= (null);
		public RectTransform			Content				= (null);
		public ScrollRect				scrollRect			= (null);
		public Image					Back				= (null);
		public objAlign					align				= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public bool						Init				= (true);
		public AXIS						Axis				= (AXIS.NOTHING);
		public ALIGN					Align				= (ALIGN.NOTHING);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public float					padding				= (10);
		public float					HMargin				= (0);
		public float					VMargin				= (0);
		public float					TopMargin			= (0);
		public float					BottomMargin		= (0);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public List<objScrollAttach>	ScrollAttaches		= new List<objScrollAttach>();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public float					fContentHeight		= (0);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	};
	public tagData		data		= new tagData();

    //-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	protected CApp		app			= (null);
	protected CPlay		play		= (null);

    //-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Awake()
	{
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		(this.app)		= (CApp.This);
		(this.play)		= (CPlay.This);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.transform)		= (transform);
		(data.rectTransform)	= (GetComponent(typeof(RectTransform)) as RectTransform);
		(data.scrollRect)		= (GetComponent(typeof(ScrollRect)) as ScrollRect);
		(data.Back)				= (GetComponent(typeof(Image)) as Image);
		(data.align)			= (GetComponent(typeof(objAlign)) as objAlign);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.Content)			= (Func.Get( Transform(), "Viewport/Content" ).GetComponent(typeof(RectTransform)) as RectTransform);
		if( Content()!=(null) && (Content().parent)!=(null) )
		{
			if( Content().parent.GetComponent(typeof(objControl))==(null) )
			{
				Content().parent.gameObject.AddComponent(typeof(objControl));
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Start()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.Init) && (Content().childCount)>(0) )
		{
			Init();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Init()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (Content().childCount)<=(0) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		objAlign	align	= (GetComponent(typeof(objAlign)) as objAlign);
		if( (align)!=(null) && (align.enabled) )
		{
			align.Start();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		float	Width		= (0);
		float	Height		= (0);
		float	rowWidth	= (0);
		float	colWidth	= (0);
		float	colHeight	= (0);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Component[]		comArray		= Content().GetComponentsInChildren(typeof(objControl));
		int				controlCount	= (0);
		foreach( objControl control in comArray )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( control.data.ignoreScrollView ) continue;

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Axis()==(AXIS.HORIZONTAL) )
			{
				(Width)		+= control.Width();
				(Height)	= Mathf.Max( (Height), control.Height() );
			}
			else
			if( Axis()==(AXIS.VERTICAL) )
			{
				(Width)		= Mathf.Max( (Width), control.Width() );
				(Height)	+= control.Height();
			}
			else
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(colWidth)		= control.Width();
				(colHeight)		= control.Height();

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (rowWidth)+control.Width()>this.Width() )
				{
					(Height)	+= control.Height() + (data.padding);
					(rowWidth)	= (0);
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(rowWidth)		+= control.Width() + (data.padding);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(Width)			= Mathf.Max( (rowWidth), (Width) );

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(controlCount)	+= (1);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Axis()==(AXIS.HORIZONTAL) )
		{
			(Width)		+= (controlCount+1) * (data.padding) + (data.HMargin);
		}
		else
		if( Axis()==(AXIS.VERTICAL) )
		{
			(Height)	+= (controlCount+1) * (data.padding) + (data.VMargin);
		}
		else
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (rowWidth)>(0) )
			{
				(Height)	+= (colHeight);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// 테이블형 배열일 때, 좌측 정렬을 설정함
		//---------------------------------------------------------------------------------------------------------------------------
		if( Align()==(ALIGN.LEFT_TOP) || Align()==(ALIGN.LEFT) )
		{
			if( Axis()!=(AXIS.HORIZONTAL) && Axis()!=(AXIS.VERTICAL) )
			{
				while( (Width)+(colWidth)<this.Width() )
				{
					(Width)		+= (colWidth) + (data.padding);
				}
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(Height)	+= (data.BottomMargin);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.fContentHeight)	= (Height);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Axis()==(AXIS.HORIZONTAL) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			switch( Align() )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				case (ALIGN.LEFT_TOP):
					(data.Content.anchoredPosition)		= new Vector2( (Width-this.Width())/(2), this.Height()/(2)-(Height/2)-(data.TopMargin) );
					break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				default:
					(data.Content.anchoredPosition)		= new Vector2( (Width-this.Width())/(2), (0) );
					break;

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		if( Axis()==(AXIS.VERTICAL) )
		{
			if( (Height)<this.Height() )
			{
//				(data.Content.anchoredPosition)		= new Vector2( (0), -this.Height()/(2) );
				(data.Content.anchoredPosition)		= new Vector2( (0), (0) );
			}
			else
			{
				(data.Content.anchoredPosition)		= new Vector2( (0), -(Height-this.Height())/(2) );
			}
		}
		else
		{
			if( (Height)<this.Height() )
			{
//				(data.Content.anchoredPosition)		= new Vector2( (0), -this.Height()/(2) );
				(data.Content.anchoredPosition)		= new Vector2( (0), (0) );
			}
			else
			{
				(data.Content.anchoredPosition)		= new Vector2( (0), -(Height-this.Height())/(2) );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( Axis()==(AXIS.HORIZONTAL) )
		{
			(data.Content.sizeDelta)	= new Vector3( (Width), Mathf.Max(this.Height(), (Height)) );
		}
		else
		if( Axis()==(AXIS.VERTICAL) )
		{
			(data.Content.sizeDelta)	= new Vector3( Mathf.Max(this.Width(), (Width)), (Height) );
		}
		else
		{
			(data.Content.sizeDelta)	= new Vector3( Mathf.Max(this.Width(), (Width)), Mathf.Max(this.Height(), (Height)) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (CApp.This)!=(null) )
		{
			(_ScrollRect().movementType)	= (ScrollRect.MovementType.Clamped);
			CApp.This.MessageQueue.ON( (WM.CALL), (null), (null), (0.3f), (funcScrollMovementTypeReset) );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Vector2		vBase	= new Vector2( -Mathf.Max(this.Width(), (Width))/(2)+(data.HMargin), Mathf.Max(this.Height(), (Height))/(2)-(data.VMargin) );
		if( Axis()!=(AXIS.HORIZONTAL) && Axis()!=(AXIS.VERTICAL) )
		{
			if( Align()==(ALIGN.TOP) || Align()==(ALIGN.CENTER) || Align()==(ALIGN.BOTTOM) )
			{
				(vBase.x)	+= ( this.Width() - (Width) ) / (2);
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(vBase.y)	-= (data.TopMargin);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Vector2		pos		= (vBase);
		(rowWidth)	= (0);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		foreach( objControl control in comArray )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( control.data.ignoreScrollView ) continue;

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( Axis()==(AXIS.HORIZONTAL) )
			{
				(control.Transform().localPosition)		= new Vector3( (pos.x) + control.Width()/(2), (data.VMargin), (0) );
				(pos.x)		+= control.Width() + (data.padding);
			}
			else
			if( Axis()==(AXIS.VERTICAL) )
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				Vector3		vPos	= new Vector3();
				(vPos.x)	= (data.HMargin);
				(vPos.y)	= (pos.y) - control.Height()/(2);
				(vPos.z)	= (0);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( Align()==(ALIGN.LEFT) || Align()==(ALIGN.LEFT_TOP) )
				{
					(vPos.x)	= -(_RectTransform().sizeDelta.x)/(2) + (Width)/(2);
				}
				else
				if( Align()==(ALIGN.RIGHT) )
				{
					(vPos.x)	= (vPos.x) + (_RectTransform().sizeDelta.x)/(2) - (Width)/(2);
				}
				else
				if( Align()==(ALIGN.TOP) || Align()==(ALIGN.CENTER) || Align()==(ALIGN.BOTTOM) )
				{
					(vPos.x)	= (data.HMargin);//(vPos.x) - (_RectTransform().sizeDelta.x)/(2) + (Width)/(2);
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(control.Transform().localPosition)		= (vPos);
				(pos.y)		-= control.Height() + (data.padding);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}
			else
			{
				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				if( (rowWidth)+control.Width()>this.Width() )
				{
					(rowWidth)	= (0);
					(pos.x)		= (vBase.x);
					(pos.y)		-= control.Height() + (data.padding);
				}

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
				(control.Transform().localPosition)		= new Vector3( (pos.x) + control.Width()/(2), (pos.y) - control.Height()/(2), (0) );
				(rowWidth)	+= control.Width() + (data.padding);
				(pos.x)		+= control.Width() + (data.padding);

				//-------------------------------------------------------------------------------------------------------------------
				// -
				//-------------------------------------------------------------------------------------------------------------------
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		int		End		= _ScrollRect().onValueChanged.GetPersistentEventCount();
		for( int i=0; i<(End); i++ )
		{
			objScrollAttach		scrollAttach	= (_ScrollRect().onValueChanged.GetPersistentTarget(i) as objScrollAttach);
			if( (scrollAttach)!=(null) )
			{
				scrollAttach.OnScroll( new Vector2() );
			}
		}

		foreach( objScrollAttach scrollAttach in data.ScrollAttaches )
		{
			scrollAttach.OnScroll( new Vector2() );
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(_ScrollRect().scrollSensitivity)	= (Height) / (-40);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.Init)		= (false);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void funcInit( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Init();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // 트랜스폼 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Transform Transform()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.transform);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // 트랜스폼 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public RectTransform _RectTransform()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.rectTransform);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // 컨텐츠 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public RectTransform Content()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.Content);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 가로 너비를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public float Width()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (_RectTransform().sizeDelta.x) * (_RectTransform().localScale.x);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 세로 높이를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public float Height()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (_RectTransform().sizeDelta.y) * (_RectTransform().localScale.y);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 기준 축을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public AXIS Axis()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.Axis);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 정렬 정보를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public ALIGN Align()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.Align);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 스크롤 뷰 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public ScrollRect _ScrollRect()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.scrollRect);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
	void funcScrollMovementTypeReset( object wParam=(null), object lParam=(null) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(_ScrollRect().movementType)	= (ScrollRect.MovementType.Elastic);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void InertiaHold()
	{
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		(_ScrollRect().inertia)	= (false);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		app.MessageQueue.ON( (WM.CALL), (null), (null), (0.5f), (InertiaReset) );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void InertiaReset( object wParam=(null), object lParam=(null) )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		(_ScrollRect().inertia)	= (true);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
	// 배경 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public Image Back()
	{
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (data.Back);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
	// 배경 색상을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void SetBackgroundColor( Color color )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( Back()!=(null) )
		{
			(Back().color)	= (color);
		}

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
	// 초기화가 예약되어 있는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool IsInit()
	{
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (data.Init);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 정렬 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objAlign _Align()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.align);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------