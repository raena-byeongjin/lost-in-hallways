using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------
public class objForeBack : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public objPanel				panel				= (null);
		public objCanvas			canvas				= (null);
		public Transform			transform			= (null);
		public GameObject			gameObject			= (null);
		public Image				image				= (null);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public List<Component>		Instances			= new List<Component>();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public float				fadeTime			= (0f);
		public float				defaultAlpha		= (0f);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}
	public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	protected CApp		app			= (null);
	protected CPlay		play		= (null);

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Awake()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(this.app)		= (CApp.This);
		(this.play)		= (CPlay.This);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(data.panel)		= (GetComponent(typeof(objPanel)) as objPanel);
		(data.transform)	= (transform);
		(data.gameObject)	= (gameObject);
		(data.image)		= (GetComponentInChildren(typeof(Image)) as Image);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( Image()!=(null) )
		{
			(data.defaultAlpha)		= (Image().color.a);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Update()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (Image().color.a)<(data.defaultAlpha) )
		{
			(Image().color)		= Func.Color( (Image().color), (Image().color.a)+(data.defaultAlpha*Time.deltaTime) );
		}
		else
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(Image().color)		= Func.Color( (Image().color), (data.defaultAlpha) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			Enable( false );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void ON( Component instance, float fadeTime=(0f) )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		if( (instance)==(null) ) return;	//(NULL)값을 허용함

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		(data.image.rectTransform.sizeDelta)	= new Vector2( tagSystem.GetScreenWidth(), tagSystem.GetScreenHeight() );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (instance)!=(null) )
		{
			data.Instances.Remove(instance);
			data.Instances.Add(instance);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		ViewPanel viewPanel = (instance as ViewPanel);
		if( (viewPanel)!=(null) )
		{
			_Transform().SetSiblingIndex( viewPanel.Transform().GetSiblingIndex()-(1) );
		}
		else
		{
			_Transform().SetSiblingIndex( (_Transform().parent.childCount)-(2) );
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		_GameObject().SetActive( true );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		Forword( instance );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (fadeTime)>(0) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.fadeTime)		= (fadeTime);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(Image().color)		= Func.Color( (Image().color), (0) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( !(enabled) )
			{
				Enable( true );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		else
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(Image().color)		= Func.Color( (Image().color), (data.defaultAlpha) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( enabled )
			{
				Enable( false );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인터페이스를 활성화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void OFF( Component instance, bool isRemove=(true) )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		if( (instance)==(null) ) return;	//(NULL)값을 허용함

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
//		bool isContains = data.Instances.Contains(instance);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		bool isContains = data.Instances.Remove(instance);	//삭제를 안하면 비활성화가 안되서, 삭제 후 다시 생성함

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (data.Instances.Count)<=(0) )
		{
			data.panel.OFF();
		}
		/*
		else
		if( isContains )
		{
			Component component = GetActiveForwardInstance();
			if( (component)!=(null) ) 
			{
				Forword( component );
			}
			else
			{
				//Inactive되어있을 경우 회복하지 않음
				data.panel.OFF();
			}
		}
		*/

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( !(isRemove) && (isContains) )
		{
			//삭제가 허용되지 않았을 경우, 삭제 후 다시 생성함
			data.Instances.Add(instance);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
    // -
    //-------------------------------------------------------------------------------------------------------------------------------
	void Forword( object obj )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (obj)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Transform	transform	= (null);
		ViewPanel	panel		= (obj as ViewPanel);
		if( (panel)!=(null) )
		{
			(transform) = panel.Transform();
		}
		else
		if( (obj as Transform)!=(null) )
		{
			(transform) = (obj as Transform);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		bool onFore = (false);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (transform)!=(null) )
		{
			if( (transform.parent)!=(null) && (transform.parent.childCount)-transform.GetSiblingIndex()>(1) )
			{
				Func.SetAsLastSibling( transform );
				(onFore) = (true);
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( onFore )
		{
			if( (panel)!=(null) )
			{
				panel.ONNAVIGATION();
				panel.ONFORE();
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
    // 활성화를 설정하기 위한 함수
    //-------------------------------------------------------------------------------------------------------------------------------
	void Enable( bool option )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(enabled)	= (option);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
    // 인스턴스 리스트를 얻기 위한 함수
    //-------------------------------------------------------------------------------------------------------------------------------
	public List<Component> Instances()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.Instances);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
    // 점유되어 있는지 확인하기 위한 함수
    //-------------------------------------------------------------------------------------------------------------------------------
	public bool Is( Component instance )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (instance)==(null) ) return false;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( data.Instances.Contains(instance) )
		{
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

    //-------------------------------------------------------------------------------------------------------------------------------
    // 활성화 되어 있는지 확인하기 위한 함수
    //-------------------------------------------------------------------------------------------------------------------------------
	public bool Is()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.panel)!=(null) && data.panel.IsPanel() )
		{
			return true;
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

    //-------------------------------------------------------------------------------------------------------------------------------
    // 활성화 되어 있는지 확인하기 위한 함수
    //-------------------------------------------------------------------------------------------------------------------------------
	public bool IsActive()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return Is();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
    // 트랜스 폼 객체를 얻기 위한 함수
    //-------------------------------------------------------------------------------------------------------------------------------
	public Transform _Transform()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.transform);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
    // 게임 오브젝트 객체를 얻기 위한 함수
    //-------------------------------------------------------------------------------------------------------------------------------
	public GameObject _GameObject()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.gameObject);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
    // 이미지 객체를 얻기 위한 함수
    //-------------------------------------------------------------------------------------------------------------------------------
	public Image Image()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.image);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 알파 값을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Alpha( float value )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.Instances.Count)<=(1) )
		{
			if( Image()!=(null) )
			{
				(Image().color)		= Func.Color( (Image().color), (data.defaultAlpha)*(value) );
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 왼쪽 버튼을 뗬을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONLBUTTONDOWN( Vector3 point, TOUCH_INDEX touchIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Component	component	= (null);
		int			End			= (data.Instances.Count);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		for( int i=0; i<(End); i++ )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(component)		= (data.Instances[i]);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (component as ViewPanel)!=(null) && (component as ViewPanel).ONLBUTTONDOWN( (point), (touchIndex) ) )
			{
				return true;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (End)!=(data.Instances.Count) )
			{
				break;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 마우스 왼쪽 버튼을 뗬을 때 반응하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool ONLBUTTONUP( Vector3 point, TOUCH_INDEX touchIndex )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Component	component	= (null);
		int			End			= (data.Instances.Count);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		for( int i=0; i<(End); i++ )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(component)		= (data.Instances[i]);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (component as ViewPanel)!=(null) && (component as ViewPanel).ONLBUTTONUP( (point), (touchIndex) ) )
			{
				return true;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (End)!=(data.Instances.Count) )
			{
				break;
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// Depth 값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public float GetDepth()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.canvas)!=(null) && data.canvas.Camera()!=(null) )
		{
			return (data.canvas.Camera().Get().depth);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (0);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	Component GetActiveForwardInstance()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		ViewPanel	panel	= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		for( int i=(data.Instances.Count-1); i>=(0); i-- )
		{
			(panel)		= (data.Instances[i] as ViewPanel);
			if( (panel)!=(null) )
			{
				if( panel.Is() )
				{
					//활성화되있는 경우에만 리턴함
					return (panel);
				}
			}
			else
			{
				//ViewPanel 객체가 아닌 예외 Component가 입력되어 있을 경우에는
				//활성화 여부를 확인하지 않으므로 바로 리턴함
				return (data.Instances[i]);
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------