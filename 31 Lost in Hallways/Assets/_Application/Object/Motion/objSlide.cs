using System.Collections;
using System.Collections.Generic;
using System;
using UnityEngine.UI;
using UnityEngine;

//-----------------------------------------------------------------------------------------------------------------------------------
// 슬라이드 인-아웃을 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class objSlide : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	[System.Serializable]
	public class tagData
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public RectTransform		rectTransform		= (null);
		public GameObject			gameObject			= (null);
		public objMove				move				= (null);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		public Vector3				vOrigin				= new Vector3();
		public Vector3				vOut				= new Vector3();
		public bool					AutoStart			= (true);
		public bool					Init				= (false);
		public List<tagCallback>	Callbacks			= new List<tagCallback>();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}
	public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Awake()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		(data.rectTransform)	= (GetComponent(typeof(RectTransform)) as RectTransform);
		(data.gameObject)		= (gameObject);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Start()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		objAlign	align	= (GetComponent(typeof(objAlign)) as objAlign);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( !(data.Init) && ( (align)==(null) || !align.IsWait() ) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.vOrigin)	= (_RectTransform().localPosition);
			(data.vOut)		= GetOutPosition(data.vOrigin);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( data.AutoStart )
			{
				In();
			}
			else
			{
				(_RectTransform().localPosition)	= (data.vOut);
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.Init)		= (true);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Update()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.move)==(null) || !data.move.IsAction() )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(enabled)	= (false);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			foreach( tagCallback callback in data.Callbacks )
			{
				callback.Call();
			}

			data.Callbacks.Clear();

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 슬라이드 인을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void In( float delay=(0f) )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.move)		= (GetComponent(typeof(objMove)) as objMove);
		if( (data.move)==(null) && _GameObject()!=(null) )
		{
			(data.move)		= (_GameObject().AddComponent(typeof(objMove)) as objMove);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.move)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
//			(data.move.Transform().localPosition)	= (data.vOut);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.move.data.Local)		= (true);
			(data.move.data.Divide)		= (10);
			(data.move.data.Min)		= (0.01f);
			(data.move.data.Max)		= (1000);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.move.data.delay)		= (delay);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			data.move.ON( data.vOrigin );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(enabled)	= (true);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 슬라이드 아웃을 설정하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Out()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(data.move)		= (GetComponent(typeof(objMove)) as objMove);
		if( (data.move)==(null) )
		{
			(data.move)		= (_GameObject().AddComponent(typeof(objMove)) as objMove);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.move)!=(null) )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(data.move.data.Local)		= (true);
			(data.move.data.Divide)		= (10);
			(data.move.data.Min)		= (0.01f);
			(data.move.data.Max)		= (1000);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			data.move.ON( data.vOut );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(enabled)	= (true);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 트랜스폼 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public RectTransform _RectTransform()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.rectTransform);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 게임 오브젝트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public GameObject _GameObject()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.gameObject);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public Vector3 GetOutPosition( Vector3 vIn )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		Vector3		vOut			= new Vector3();

		float		WidthDivide		= tagSystem.GetScreenWidth() / (3) / (2);

		float		HeightDivide	= tagSystem.GetScreenHeight() / (3) / (2);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		Vector2		vMin		= new Vector2( 999999, 999999 );
		Vector2		vMax		= new Vector2( -999999, -999999 );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		GetSize( ref vMin, ref vMax );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (vIn.x)<(-WidthDivide) )
		{
			(vOut.x)	= (-vMax.x)	- tagSystem.GetScreenWidth()/(2);
		}
		else
		if( (vIn.x)>(WidthDivide) )
		{
			(vOut.x)	= (vMax.x)	+ tagSystem.GetScreenWidth()/(2);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (vIn.y)<(-HeightDivide) )
		{
			(vOut.y)	= (-vMax.y)	- tagSystem.GetScreenHeight()/(2);
		}
		else
		if( (vIn.y)>(HeightDivide) )
		{
			(vOut.y)	= (-vMin.y)	+ tagSystem.GetScreenHeight()/(2);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (vOut);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void GetSize( ref Vector2 vMin, ref Vector2 vMax )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( _RectTransform().GetComponent(typeof(Image))!=(null) || _RectTransform().GetComponent(typeof(RawImage))!=(null) )
		{
			(vMin.x)	= (-_RectTransform().sizeDelta.x)	* (_RectTransform().pivot.x)	* Mathf.Abs(_RectTransform().localScale.x);
			(vMax.x)	= (_RectTransform().sizeDelta.x)	* (1-_RectTransform().pivot.x)	* Mathf.Abs(_RectTransform().localScale.x);
			(vMin.y)	= (-_RectTransform().sizeDelta.y)	* (_RectTransform().pivot.y)	* Mathf.Abs(_RectTransform().localScale.y);
			(vMax.y)	= (_RectTransform().sizeDelta.y)	* (1-_RectTransform().pivot.y)	* Mathf.Abs(_RectTransform().localScale.y);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		Vector2		vLocal		= new Vector3();
		Vector2		vScale		= (_RectTransform().localScale);
		Flow( ref vMin, ref vMax, _RectTransform(), (vLocal), (vScale) );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Flow( ref Vector2 vMin, ref Vector2 vMax, Transform parent, Vector2 vLocal, Vector2 vScale )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (parent)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (parent)!=_RectTransform() )
		{
			(vLocal)	+= new Vector2( (parent.localPosition.x)*(vScale.x), (parent.localPosition.y)*(vScale.y) );
			(vScale)	*= (parent.localScale);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		RectTransform		child		= (null);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		for( int i=0; i<(parent.childCount); i++ )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			(child)		= (parent.GetChild(i) as RectTransform);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			if( (child)!=(null) )
			{
				(vMin.x)	= Mathf.Min( (vMin.x), (child.localPosition.x) - ((child.sizeDelta.x)*(child.pivot.x)		* Mathf.Abs(child.localScale.x)	* Mathf.Abs(vScale.x)) + (vLocal.x) );
				(vMax.x)	= Mathf.Max( (vMax.x), (child.localPosition.x) + ((child.sizeDelta.x)*(1-child.pivot.x)		* Mathf.Abs(child.localScale.x)	* Mathf.Abs(vScale.x)) + (vLocal.x) );
				(vMin.y)	= Mathf.Min( (vMin.y), (child.localPosition.y) - ((child.sizeDelta.y)*(child.pivot.y)		* Mathf.Abs(child.localScale.y)	* Mathf.Abs(vScale.y)) + (vLocal.y) );
				(vMax.y)	= Mathf.Max( (vMax.y), (child.localPosition.y) + ((child.sizeDelta.y)*(1-child.pivot.y)		* Mathf.Abs(child.localScale.y)	* Mathf.Abs(vScale.y)) + (vLocal.y) );
			}

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	public void SetCallback( Action<object, object> func, object wParam=(null), object lParam=(null) )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( (func)==(null) ) return;
//		if( (wParam)==(null) ) return;		//(NULL)값을 허용함
//		if( (lParam)==(null) ) return;		//(NULL)값을 허용함

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		data.Callbacks.Add( new tagCallback( (func), (wParam), (lParam) ) );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 활성화 되어 있는지 확인하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public bool IsAction()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		if( isActiveAndEnabled )
		{
			return true;
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return false;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 이동 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public objMove Move()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		return (data.move);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 움직임을 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public void Cancel()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
		data.Callbacks.Clear();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
        //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------