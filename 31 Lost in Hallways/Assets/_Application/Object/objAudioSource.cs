using UnityEngine;
using System.Collections;

//-----------------------------------------------------------------------------------------------------------------------------------
// 오디오를 재생하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class objAudioSource : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
    [System.Serializable]
    public class tagData
    {
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		public string			id				= (null);
		public ENABLE_N			Play			= (ENABLE_N.ENABLE);
		public bool				Repeat			= (false);
		[Range(0.0f, 1.0f)]
		public float			Volume			= (1f);
		[Range(0.0f, 3.0f)]
		public float			Pitch			= (1f);
		public float			delay			= (0f);
		[Range(0.0f, 1.0f)]
		public float			_3D				= (0f);
		public float			MinDistance		= (1f);
		public float			MaxDistance		= (50f);
		public object			audioInfo		= (null);	//tagAudioSource
		public AudioSource		audioSource		= (null);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
    };
    public tagData		data		= new tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	protected CApp		app			= (null);
	protected CPlay		play		= (null);

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Awake()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(this.app)		= (CApp.This);
		(this.play)		= (CPlay.This);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.Play)==(ENABLE_N.AWAKE) || (data.Play)==(ENABLE_N.NOTHING) )
		{
			Play();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Start()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (app)==(null) ) Awake();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.Play)==(ENABLE_N.START) )
		{
			Play();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void OnEnable()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (app)==(null) ) Awake();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.Play)==(ENABLE_N.ENABLE) )
		{
			Play();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Play()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (app)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.audioSource)==(null) ) (data.audioSource) = (GetComponent(typeof(AudioSource)) as AudioSource);
		if( (data.audioSource)==(null) ) (data.audioSource)	= (gameObject.AddComponent(typeof(AudioSource)) as AudioSource);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.audioInfo)==(null) )
		{
//			(data.audioInfo)	= app.Sound.Find(data.id);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		Play( AudioInfo() );

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
	void Play( tagAudioSource audioInfo )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (audioInfo)==(null) ) return;
		if( (audioInfo.clip)==(null) ) return;
		if( (audioInfo.volume)<=(0) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		(_AudioSource().clip)			= (audioInfo.clip);
		(_AudioSource().playOnAwake)	= (false);
		(_AudioSource().loop)			= (data.Repeat);
		(_AudioSource().volume)			= (data.Volume);
		(_AudioSource().pitch)			= (data.Pitch);
		(_AudioSource().spatialBlend)	= (data._3D);
		(_AudioSource().minDistance)	= (data.MinDistance);
		(_AudioSource().maxDistance)	= (data.MaxDistance);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.delay)>(0) )
		{
			_AudioSource().PlayDelayed( data.delay );
		}
		else
		{
			_AudioSource().Play();
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 오디오 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public AudioSource _AudioSource()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (data.audioSource);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 오디오 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public tagAudioSource AudioInfo()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (data.audioInfo)!=(null) )
		{
			return (data.audioInfo as tagAudioSource);
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------