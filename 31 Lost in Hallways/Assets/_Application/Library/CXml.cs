using System.Xml;
using System.IO;
using System;
using UnityEngine;

//XML 정보를 처리하기 위한 클래스
public class CXml
{
    public static XmlDocument Load( string filepath )
    {
        if( !Library.Is(filepath) ) return null;

		XmlDocument xmlDoc = new XmlDocument();

		if( Library.IsFile(filepath) )
		{
			try
			{
				xmlDoc.Load( filepath );
				return xmlDoc;
			}
			catch( Exception ex )
			{
				Debug.Log("Error loading "+filepath+":\n"+ex);
			}
			finally
			{
	//          Debug.Log("CXml::Load( "+xmlDoc.Name+" ) - Loaded");
			}
		}
		else
		{
			string Ext = Library.Ext(filepath);
			string decodePath = filepath.Substring( 0, filepath.Length-Ext.Length )+"data";

			if( Library.IsFile(decodePath) )
			{
				string value = Decode(decodePath);

				try
				{
					Debug.LogWarning(value);
					xmlDoc.LoadXml( value );
					return xmlDoc;
				}
				catch( Exception ex )
				{
					Debug.Log("Error loading "+decodePath+":\n"+ex);
				}
				finally
				{
//				    Debug.Log("CXml::Load( "+xmlDoc.Name+" ) - Loaded");
				}
			}
		}

        return null;
    }

    public static XmlDocument Load( TextAsset textAsset )
    {
        if( textAsset==null || textAsset.dataSize<=0 ) return null;
        return Load(textAsset.bytes);
	}

	//Xml을 불러오기 위한 함수
    public static XmlDocument LoadXml( string xmldata )
    {
        if( !Library.Is(xmldata) ) return null;
		Debug.LogWarning(xmldata);

		XmlDocument xmlDoc = new XmlDocument();
		xmlDoc.LoadXml(xmldata);

		return xmlDoc;
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
    public static XmlDocument Load( byte[] xmldata )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (xmldata)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        MemoryStream    assetStream     = new MemoryStream( xmldata );
        XmlReader       reader          = XmlReader.Create( assetStream );
        XmlDocument     xmlDoc          = new XmlDocument();

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        try
        {
            xmlDoc.Load( reader );
        }
		/*
        catch( Exception ex )
        {
//          Debug.Log("Error loading "+xmlFile.name+":\n"+ex);
        }
		*/
        finally
        {
//          Debug.Log("CXml::Load( "+(xmlFile.name)+" ) - Loaded");
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (xmlDoc);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 문서를 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static void Save( string filepath, XmlDocument xmlDoc )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (filepath)==(null) ) return;
        if( (xmlDoc)==(null) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( File.Exists(filepath) )
        {
            using( TextWriter sw = new StreamWriter(filepath, false, System.Text.Encoding.UTF8))
            {
                xmlDoc.Save( sw );
            }
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 애셋번들 정보를 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static void SaveAssetBundle( string directory, string filename, tagAssetBundle assetBundle )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (directory)==(null) ) return;
        if( (filename)==(null) ) return;
        if( (assetBundle)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        Directory.CreateDirectory( directory );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlDocument     xmlDoc      = new XmlDocument();

        string          filepath    = (directory)+"/"+(filename);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		XmlTextWriter   xmlWriter   = new XmlTextWriter( (filepath), (null) );
		(xmlWriter.Formatting)      = (Formatting.Indented);
		(xmlWriter.Indentation)     = (4);
		xmlWriter.WriteStartDocument();
	    xmlWriter.WriteStartElement( "Assets" );
        {
            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
            CXml.WriteNodeValue( (xmlWriter), "AssetBundle", (assetBundle) );

	        //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
        }
	    xmlWriter.WriteEndElement();
		xmlWriter.WriteEndDocument();
		xmlWriter.Close();

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 애셋번들 정보를 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static tagAssetBundle LoadAssetBundle( string filepath )
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (filepath)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlDocument         xmlDoc          = CXml.Load( filepath );
        if( (xmlDoc)==(null) ) return (null);
        
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        tagAssetBundle      assetBundle     = new tagAssetBundle();

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlNode             pNodeAssets     = xmlDoc.SelectSingleNode("Assets");
        if( (pNodeAssets)!=(null) )
        {
            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
            CXml.GetChildValue( (pNodeAssets), (assetBundle), "AssetBundle" );

            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
        }

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (assetBundle);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 런너 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static string GetChildAttributesValue( XmlNode pNode, string childname, string name )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return (null);
        if( (childname)==(null) ) return (null);
        if( (name)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlNode     pChild  = pNode.SelectSingleNode(childname);
        if( (pChild)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return GetAttributesValue( (pChild), (name) );
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 런너 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static string GetAttributesValue( XmlNode pNode, string name )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return (null);
        if( (pNode.Attributes)==(null) ) return (null);
        if( (name)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlAttributeCollection  Attributes  = (pNode.Attributes);
        if( (Attributes)==(null) ) return (null);
        
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlNode     pChild  = Attributes.GetNamedItem(name);
        if( (pChild)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (pChild.Value);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 런너 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static bool GetAttributesValueBoolean( XmlNode pNode, string name )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        string  value   = GetAttributesValue( (pNode), (name) );
        if( (value)!=(null) )
        {
            if( (value)==true.ToString() )
            {
                return true;
            }
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return false;
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 런너 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static float GetAttributesValueFloat( XmlNode pNode, string name )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        string  value   = GetAttributesValue( (pNode), (name) );
        if( (value)!=(null) )
        {
            return float.Parse(value);
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (0f);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static string GetValue( XmlNode pNode )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (pNode.InnerText);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static string GetChildValue( XmlNode pNode, string path )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return (null);
        if( (path)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlNode     pChild  = pNode.SelectSingleNode( path );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pChild)!=(null) )
        {
            return (pChild.InnerText);
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (null);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static long GetChildLong( XmlNode pNode, string path )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return (0);
        if( (path)==(null) ) return (0);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlNode     pChild  = pNode.SelectSingleNode( path );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pChild)!=(null) )
        {
            return Convert.ToInt64(pChild.InnerText);
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (0);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static int GetChildInt( XmlNode pNode, string path )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return (0);
        if( (path)==(null) ) return (0);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlNode     pChild  = pNode.SelectSingleNode( path );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pChild)!=(null) )
        {
			if( Library.Is(pChild.InnerText) )
			{
				return Convert.ToInt32(pChild.InnerText);
			}
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (0);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static float GetChildFloat( XmlNode pNode, string path )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return (0.0f);
        if( (path)==(null) ) return (0.0f);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlNode     pChild  = pNode.SelectSingleNode( path );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pChild)!=(null) )
        {
            return Convert.ToSingle(pChild.InnerText);
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (0.0f);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static bool GetChildBoolean( XmlNode pNode, string path )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return false;
        if( (path)==(null) ) return false;

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlNode     pChild  = pNode.SelectSingleNode( path );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pChild)!=(null) )
        {
            if( (pChild.InnerText)==(true.ToString()) )
            {
                return true;
            }
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return false;
    }

	//노드의 속성값을 얻기 위한 함수
    public static ulong GetChildULong( XmlNode pNode, string path )
    {
        if( pNode==null ) return 0;
        if( !Library.Is(path) ) return 0;

        XmlNode pChild  = pNode.SelectSingleNode( path );
        if( pChild!=null )
        {
			if( Library.Is(pChild.InnerText) )
			{
				return Convert.ToUInt64(pChild.InnerText);
			}
        }

        return 0;
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static Vector3 GetChildValueVector( XmlNode pNode, string path )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return new Vector3( 0, 0, 0 );
        if( (path)==(null) ) return new Vector3( 0, 0, 0 );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return convertVector3( GetChildValue( (pNode), (path) ) );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static Quaternion GetChildValueQuaternion( XmlNode pNode, string path )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return (Quaternion.identity);
        if( (path)==(null) ) return (Quaternion.identity);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return convertQuaternion( GetChildValue( (pNode), (path) ) );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	// 애셋번들 정보를 불러오기 위한 함수
    public static tagAssetBundle GetChildValue( XmlNode pNode, tagAssetBundle assetBundle, string column )
    {
		if( pNode==null ) return assetBundle;
//		if( assetBundle==null ) return assetBundle;		//(NULL)값을 허용함
		if( !Library.Is(column) ) return assetBundle;

		XmlNode pNodeAssetBundle = pNode.SelectSingleNode( column );
		if( pNodeAssetBundle==null ) return assetBundle;

		if( assetBundle==null )
		{
			assetBundle = new tagAssetBundle();
		}

		assetBundle.id				= CXml.GetChildValue( pNodeAssetBundle, "id" );
		assetBundle.Name			= CXml.GetChildValue( pNodeAssetBundle, "Name" );
		assetBundle.url				= CXml.GetChildValue( pNodeAssetBundle, "Url" );
		assetBundle.cache			= CXml.GetChildInt( pNodeAssetBundle,"cache" );
		assetBundle.UnityVersion	= CXml.GetChildValue( pNodeAssetBundle, "UnityVersion" );
		assetBundle.Size			= CXml.GetChildULong( pNodeAssetBundle, "size" );

		return assetBundle;
    }

	//텍스쳐 정보를 불러오기 위한 함수
    public static tagTexture GetChildValue( XmlNode pNode, tagTexture texture, string path )
    {
		if( pNode==null ) return null;
//		if( texture==null ) return null; //(NULL)값을 허용함
		if( !Library.Is(path) ) return null;

        XmlNode pChild = pNode.SelectSingleNode( path );
		if( pChild==null ) return null;

		if( texture==null )
		{
			texture = new tagTexture();
		}

		texture.url			= GetChildValue( pChild, "Url" );
		texture.Update		= GetChildBoolean( pChild, "Update" );
		texture.cache		= GetChildULong( pChild, "cache" );
		texture.filepath	= GetChildValue( pChild, "filepath" );
		texture.width		= GetChildInt( pChild, "width" );
		texture.height		= GetChildInt( pChild, "height" );
		texture.Size		= GetChildULong( pChild, "size" );

        return texture;
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 애셋번들 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	/*
    public static void GetChildValue( XmlNode pNode, tagSound sound, string column )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return;
		if( (sound)==(null) ) return;
        if( (column)==(null) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		GetChildValue( (pNode), (sound.assetBundle), (column) );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }
	*/

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static Vector3 GetChildVector( XmlNode pNode, string path )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return new Vector3( 0, 0, 0 );
        if( (path)==(null) ) return new Vector3( 0, 0, 0 );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return convertVector3( GetChildValue( (pNode), (path) ) );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 노드의 속성값을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static Quaternion GetChildQuaternion( XmlNode pNode, string path )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (pNode)==(null) ) return (Quaternion.identity);
        if( (path)==(null) ) return (Quaternion.identity);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return convertQuaternion( GetChildValue( (pNode), (path) ) );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 벡터로 변환하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static Vector3 convertVector3( string text )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (text)==(null) ) return new Vector3( 0, 0, 0 );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        Vector3     vector  = new Vector3();

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        string[]    values  = text.Split( ' ' );
        if( (values.Length)<(3) )
        {
            (values) = text.Split( ',' );
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (values.Length)>=(1) && (values[0].Length)>(0) )
        {
            (vector.x)      = Convert.ToSingle(values[0]);
        }
        if( (values.Length)>=(2) && (values[1].Length)>(0) )
        {
            (vector.y)      = Convert.ToSingle(values[1]);
        }
        if( (values.Length)>=(3) && (values[2].Length)>(0) )
        {
            (vector.z)      = Convert.ToSingle(values[2]);
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (vector);
    }

	//벡터로 변환하기 위한 함수
    public static Vector2 convertVector2( string value )
    {
        if( !Library.Is(value) ) return new Vector2();

        Vector2 vector = new Vector2();

        string[] values = value.Replace( " ", "" ).Split(",");

        if( values.Length>=1 && values[0].Length>0 )
        {
            vector.x = Convert.ToSingle(values[0]);
        }

        if( values.Length>=2 && values[1].Length>(0) )
        {
            vector.y = Convert.ToSingle(values[1]);
        }

        return vector;
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 벡터로 변환하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static Quaternion convertQuaternion( string text )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (text)==(null) ) return (Quaternion.identity);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        Quaternion  quater  = new Quaternion();

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		(text)		= text.Replace( "(", "" );
		(text)		= text.Replace( ")", "" );
		(text)		= text.Replace( " ", "" );

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        string[]    values  = text.Split( ',' );
        
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (values.Length)>=(1) && Library.IsSingle(values[0]) )
        {
            (quater.x)      = Convert.ToSingle(values[0]);
        }
        if( (values.Length)>=(2) && Library.IsSingle(values[1]) )
        {
            (quater.y)      = Convert.ToSingle(values[1]);
        }
        if( (values.Length)>=(3) && Library.IsSingle(values[2]) )
        {
            (quater.z)      = Convert.ToSingle(values[2]);
        }
        if( (values.Length)>=(3) && Library.IsSingle(values[3]) )
        {
            (quater.w)      = Convert.ToSingle(values[3]);
        }

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (quater);
    }

    //-------------------------------------------------------------------------------------------------------------------------------
	// 노드 엘리먼트를 추가하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static void WriteNodeValue( XmlTextWriter xmlWriter, string column, object value )
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		WriteNodeValue( (xmlWriter), (column), value.ToString() );

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

    //-------------------------------------------------------------------------------------------------------------------------------
	// 노드 엘리먼트를 추가하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static void WriteNodeValue( XmlTextWriter xmlWriter, string column, string value )
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (xmlWriter)==(null) ) return;
        if( (column)==(null) ) return;
        if( (value)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	    xmlWriter.WriteStartElement( column );
        {
            xmlWriter.WriteValue( value );
        }
	    xmlWriter.WriteEndElement();

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

    //-------------------------------------------------------------------------------------------------------------------------------
	// 노드 엘리먼트를 추가하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static void WriteNodeValue( XmlTextWriter xmlWriter, string column, Vector3 vector )
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (xmlWriter)==(null) ) return;
        if( (column)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	    WriteNodeValue( (xmlWriter), (column), (vector.x)+","+(vector.y)+","+(vector.z) );

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

    //-------------------------------------------------------------------------------------------------------------------------------
	// 노드 엘리먼트를 추가하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static void WriteNodeValue( XmlTextWriter xmlWriter, string column, bool value )
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (xmlWriter)==(null) ) return;
        if( (column)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	    WriteNodeValue( (xmlWriter), (column), (value.ToString()) );

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

    //-------------------------------------------------------------------------------------------------------------------------------
	// 애셋번들 정보를 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public static void WriteNodeValue( XmlTextWriter xmlWriter, string column, tagTexture texture )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (xmlWriter)==(null) ) return;
        if( (column)==(null) ) return;
        if( (texture)==(null) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
	    xmlWriter.WriteStartElement( column );
        {
            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
            xmlWriter.WriteAttributeString( "Type", "Texture" );

            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
            CXml.WriteNodeValue( (xmlWriter), "Url",		(texture.url) );
            CXml.WriteNodeValue( (xmlWriter), "Update",		(texture.Update) );
            CXml.WriteNodeValue( (xmlWriter), "cache",		(texture.cache) );
            CXml.WriteNodeValue( (xmlWriter), "filepath",	(texture.filepath) );
            CXml.WriteNodeValue( (xmlWriter), "width",		(texture.width) );
            CXml.WriteNodeValue( (xmlWriter), "height",		(texture.height) );
            CXml.WriteNodeValue( (xmlWriter), "size",		(texture.Size) );

	        //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
        }
	    xmlWriter.WriteEndElement();

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 애셋번들 정보를 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public static void WriteNodeValue( XmlTextWriter xmlWriter, string column, tagAssetBundle assetBundle )
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (xmlWriter)==(null) ) return;
		if( (column)==(null) ) return;
		if( (assetBundle)==(null) ) return;

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		xmlWriter.WriteStartElement( column );
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			xmlWriter.WriteAttributeString( "Type", "AssetBundle" );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			CXml.WriteNodeValue( (xmlWriter), "id",				(assetBundle.id) );
			CXml.WriteNodeValue( (xmlWriter), "Name",			(assetBundle.Name) );
			CXml.WriteNodeValue( (xmlWriter), "Url",			(assetBundle.url) );
			CXml.WriteNodeValue( (xmlWriter), "cache",			(assetBundle.cache.ToString()) );
			CXml.WriteNodeValue( (xmlWriter), "UnityVersion",	(assetBundle.UnityVersion) );
			CXml.WriteNodeValue( (xmlWriter), "size",			(assetBundle.Size.ToString()) );

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}
		xmlWriter.WriteEndElement();

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
	// 애셋번들 정보를 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	/*
    public static void WriteNodeValue( XmlTextWriter xmlWriter, string column, tagSound sound )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (xmlWriter)==(null) ) return;
        if( (column)==(null) ) return;
        if( (sound)==(null) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		WriteNodeValue( (xmlWriter), (column), (sound.assetBundle) );

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }
	*/

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 문서를 암호화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public static void Encode( string file )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (file)==(null) ) return;
		if( !File.Exists(file) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		byte[]	bytes		= File.ReadAllBytes(file);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		Encode( bytes );

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		File.WriteAllBytes( EncodeXmlPath(file), (bytes) );
		File.Delete(file);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 문서를 암호화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public static byte[] CopyEncode( byte[] bytes, int density=(1) )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (bytes)==(null) ) return (null);
		if( (density)<=(0) ) return (bytes);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		byte[]	copy	= new byte[bytes.Length];

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		Buffer.BlockCopy( (bytes), (0), (copy), (0), (bytes.Length) );

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		Encode( (copy), (1024) );

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (copy);
	}

	//XML 문서를 암호화 하기 위한 함수
	public static byte[] Encode( byte[] bytes, int density=1 )
	{
		if( bytes==null || bytes.Length<=0 ) return null;
		if( density<=0 ) return bytes;

		if( bytes.Length>0 )
		{
			byte n = 0;
			for( int i=0; i<bytes.Length; i+=density )
			{
				n = (byte)( bytes[i] ^ 254 ^ 129 ^ 11 ^ 54 );
				bytes[i] = (byte)n;
			}
		}

		return bytes;
	}

	//XML 문서를 복호화 하기 위한 함수
	public static byte[] Decode( byte[] bytes, int density=1 )
	{
		if( bytes==null || bytes.Length<=0 ) return null;
		if( density<=0 ) return bytes;

		return Encode( bytes, density );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 문서를 복호화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public static string Decode( string file )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (file)==(null) ) return (null);
		if( !File.Exists(file) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		byte[]	bytes		= File.ReadAllBytes(file);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		Encode( bytes );

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return System.Text.Encoding.UTF8.GetString(bytes);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 인코딩된 XML 파일의 경로를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public static string EncodeXmlPath( string filepath )
	{
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (filepath)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		string Ext = Library.Ext(filepath);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return filepath.Substring( (0), (filepath.Length-Ext.Length) )+"data";
	}

	//노드의 속성값을 얻기 위한 함수
    public static bool IsChild( XmlNode pNode, string path )
    {
        if( pNode==null ) return false;
        if( path==null ) return false;

		if( pNode.SelectSingleNode(path)!=null )
		{
			return true;
		}

		return false;
    }
}