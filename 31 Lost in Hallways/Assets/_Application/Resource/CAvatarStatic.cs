using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.Xml;

//아바타 정보를 처리하기 위한 클래스
public class CAvatarStatic : AppsItemListener
{
	private List<tagAvatarStatic> Avatars = new List<tagAvatarStatic>();

	protected override void Awake()
	{
		base.Awake();
		Initialize( "Avatar", UPDATE_CLASS.Avatar.ToString() );
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // 객체를 생성하기 위한 함수 
	//-------------------------------------------------------------------------------------------------------------------------------
    protected override tagAppsItem New()
    {
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return new tagAvatarStatic();

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 객체를 삭제하기 위한 함수 
	//-------------------------------------------------------------------------------------------------------------------------------
	protected override void OnDelete( tagAppsItem appsItem )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		GetList().Remove( appsItem as tagAvatarStatic );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 리스트를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public List<tagAvatarStatic> GetList()
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (Avatars);

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

    //-------------------------------------------------------------------------------------------------------------------------------
	// 객체 정보를 검색하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public tagAvatarStatic Find( string id )
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (id)==(null) ) return (null);

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        foreach( tagAvatarStatic avatar in GetList() )
        {
            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
            if( (avatar.id)==(id) )
            {
				return (avatar);
            }

            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
        }

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (null);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 무작위 객체를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public tagAvatarStatic GetRandom( UPDATE_TYPE nType )
	{
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (GetList().Count)<=(0) )
		{
			return (null);
		}

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		switch( nType )
		{
			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			case (UPDATE_TYPE.Body):
			case (UPDATE_TYPE.Face):
			case (UPDATE_TYPE.Hair):
			case (UPDATE_TYPE.Kit):
			case (UPDATE_TYPE.Backcolor):
				break;

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
			default:
				return (null);

			//-----------------------------------------------------------------------------------------------------------------------
			// -
			//-----------------------------------------------------------------------------------------------------------------------
		}

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		tagAvatarStatic avatarstatic = (null);

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        for( int loop=0; loop<(1000); loop++ )
        {
            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
			(avatarstatic)	= GetList()[Func.Random( (0), (GetList().Count-1) )];
			if( (avatarstatic.Type)==(nType) )
			{
				return (avatarstatic);
			}

            //-----------------------------------------------------------------------------------------------------------------------
	        // -
	        //-----------------------------------------------------------------------------------------------------------------------
        }

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		return (null);
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// 로컬에 저장된 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void OnLoadCache( tagAppsItem appsItem, AppsParameter col=(null) )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (appsItem)==(null) ) return;
//		if( (col)==(null) ) return;	//(NULL)값을 허용함

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		tagAvatarStatic avatar = (appsItem as tagAvatarStatic);
		if( (avatar)==(null) ) return;

		/*
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (col)!=(null) )
		{
			(department.order)	= col.GetInt("order");
		}
		*/

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( !GetList().Contains(avatar) )
		{
			GetList().Add(avatar);
		}

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 파일을 저장하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void OnXmlSave( XmlTextWriter xmlWriter, tagAppsItem appsItem )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (xmlWriter)==(null) ) return;
		if( (appsItem)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		tagAvatarStatic avatar = (appsItem as tagAvatarStatic);
		if( (avatar)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
//		CXml.WriteNodeValue( (xmlWriter), "order", (department.order) );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// XML 파일을 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	public override void OnXmlLoad( XmlNode pNode, tagAppsItem appsItem )
	{
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		if( (pNode)==(null) ) return;
		if( (appsItem)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		tagAvatarStatic avatar = (appsItem as tagAvatarStatic);
		if( (avatar)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
//		(department.order)	= CXml.GetChildInt( (pNode), "order" );

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------