using System.Collections;
using System.Collections.Generic;
using System.Xml;
using System.IO;
using UnityEngine.Networking;
using UnityEngine;

//-----------------------------------------------------------------------------------------------------------------------------------
// 언어 정보를 처리하기 위한 클래스
//-----------------------------------------------------------------------------------------------------------------------------------
public class AppsLanguage : MonoBehaviour
{
	//-------------------------------------------------------------------------------------------------------------------------------
	// -
	//-------------------------------------------------------------------------------------------------------------------------------
    [System.Serializable]
    public class _tagData
    {
	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		public LANGUAGE		Language;

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		public string[]		languageName	= new string[(int)LANGUAGE.END];

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		public Dictionary<string, tagLanguage>	dicLanguages	= new Dictionary<string, tagLanguage>();
        public List<tagLanguage>				Languages		= new List<tagLanguage>();

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
		public bool			Log		= (false);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    };
    public _tagData		_data	= new _tagData();

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
    void Awake()
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        (Data().languageName[(int)LANGUAGE.NOTHING])			= "Nothing";
        (Data().languageName[(int)LANGUAGE.KOREAN])				= "한국어";
        (Data().languageName[(int)LANGUAGE.ENGLISH])			= "English US";
        (Data().languageName[(int)LANGUAGE.CHINESE])			= "中國 (傳統)";
        (Data().languageName[(int)LANGUAGE.CHINESE_SAMPLE])		= "中國 (简)";
        (Data().languageName[(int)LANGUAGE.JAPANESE])			= "日本語";

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        Apps.AddListener( this );

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 언어 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
	void Start()
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        LoadCache( GetLanguagePath() );

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
	// 언어 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public void LoadCache( string filepath )
    {
        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (filepath)==(null) ) return;

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( File.Exists(filepath) )
        {
            Reset();
            XmlLoad( File.ReadAllBytes(filepath) );
        }

        //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
    // 언어 정보를 업데이트 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public void onUpdate( AppsParameter col )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (col)==(null) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        StartCoroutine( XmlDownload( col.Get("xml"), (true) ) );

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

    //커버 텍스쳐를 다운로드 하기 위한 함수
    IEnumerator XmlDownload( string xmlfile, bool notify )
    {
        if( xmlfile==null ) yield return null;

        UnityWebRequest www = Internet.Protocol( xmlfile );
        onDownload( www, "Language Package", notify );
        yield return www;

		if( www.error==null )
        {
			if( Data().Log ) Debug.Log("SemsAppsLanguage::XmlDownload( "+xmlfile+" );");

            File.WriteAllBytes( GetLanguagePath(), www.downloadHandler.data );

            Reset();
            XmlLoad( www.downloadHandler.data );
        }
        else
        {
			Release( www );
            Debug.LogError( "AssetBundle Download Error : "+www.error+" => "+www.url );
        }

		if( www!=null )
		{
			www.Dispose();
			www = null;
		}
    }

	//-------------------------------------------------------------------------------------------------------------------------------
    // 언어 정보를 초기화 하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    void Reset()
    {
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        Data().Languages.Clear();

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
    // 언어 정보를 불러오기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    void XmlLoad( byte[] xmldata )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (xmldata)==(null) ) return;

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlDocument			xmlDoc  = CXml.Load( xmldata );
//		tagLanguageNation	nation	= (null);

	    //---------------------------------------------------------------------------------------------------------------------------
	    // -
	    //---------------------------------------------------------------------------------------------------------------------------
        XmlNodeList		pLanguageList	= xmlDoc.SelectNodes("LanguageSet/language");
        foreach( XmlNode pLanguage in pLanguageList )
        {
	        //-------------------------------------------------------------------------------------------------------------------
            // -
	        //-------------------------------------------------------------------------------------------------------------------
            tagLanguage		language	= Register( CXml.GetAttributesValue((pLanguage), "id") );

	        //-------------------------------------------------------------------------------------------------------------------
            // -
	        //-------------------------------------------------------------------------------------------------------------------
            XmlNodeList		pNodeList	= (pLanguage.ChildNodes);
            foreach( XmlNode pNode in pNodeList )
            {
				language.Nations.Add( new tagLanguageNation(GetType(pNode.Name), (pNode.InnerText)) );
            }

	        //-----------------------------------------------------------------------------------------------------------------------
            // -
	        //-----------------------------------------------------------------------------------------------------------------------
        }

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

	//-------------------------------------------------------------------------------------------------------------------------------
    // 언어 정보를 등록하기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    tagLanguage Register( string id )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (id)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        tagLanguage		language	= new tagLanguage();
		(language.id)	= (id);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		Data().dicLanguages.Remove(id);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
		Data().dicLanguages.Add( (id), (language) );
        Data().Languages.Add( language );

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (language);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
    // 언어 정보를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public string Get( string id )
    {
	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( (id)==(null) ) return (null);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        LANGUAGE	Language	= (Data().Language);
        if( (Language)==(LANGUAGE.NOTHING) ) (Language) = (LANGUAGE.KOREAN);

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        if( Data().dicLanguages.ContainsKey(id) )
        {
	        //-----------------------------------------------------------------------------------------------------------------------
            // -
	        //-----------------------------------------------------------------------------------------------------------------------
            tagLanguage		language	= (Data().dicLanguages[id] as tagLanguage);
            if( (language)!=(null) )
            {
	            //-------------------------------------------------------------------------------------------------------------------
                // -
	            //-------------------------------------------------------------------------------------------------------------------
				tagLanguageNation	nation		= language.Get(Language);
				if( (nation)!=(null) )
				{
					if( Library.Is(nation.text) )
					{
						return nation.text.Replace( "%r", "\r\n" );
					}
				}

	            //-------------------------------------------------------------------------------------------------------------------
                // -
	            //-------------------------------------------------------------------------------------------------------------------
            }

	        //-----------------------------------------------------------------------------------------------------------------------
            // -
	        //-----------------------------------------------------------------------------------------------------------------------
        }

	    //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (id);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
    // 컬렉션의 리소스 경로를 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public string GetLanguagePath()
    {
        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
        return (Application.persistentDataPath)+"/language.xml";

        //---------------------------------------------------------------------------------------------------------------------------
        // -
	    //---------------------------------------------------------------------------------------------------------------------------
    }

    //다운로드가 발생했을 때 반응하기 위한 함수
    public virtual void onDownload( UnityWebRequest www, string name, bool notify )
    {
    }

    //웹 프로토콜 객체를 초기화 하기 위한 함수
    public virtual void Release( UnityWebRequest www )
    {
    }

	//-------------------------------------------------------------------------------------------------------------------------------
    // 언어 타입을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public LANGUAGE GetType( string strType )
    {
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		if( (strType)==(null) ) return (LANGUAGE.NOTHING);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		int		End		= (int)(LANGUAGE.END);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		for( int i=0; i<(End); i++ )
		{
			if( ((LANGUAGE)i).ToString().ToLower()==(strType.ToLower()) )
			{
				return ((LANGUAGE)i);
			}
		}

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (LANGUAGE.NOTHING);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
    // 언어 이름을 얻기 위한 함수
	//-------------------------------------------------------------------------------------------------------------------------------
    public string GetName( LANGUAGE language )
    {
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
        int		index	= (int)(language);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
        if( (index)<(0) || (index)>=(Data().languageName.Length) )
        {
            return (null);
        }

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
        return (Data().languageName[index]);
    }

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
	public _tagData Data()
	{
		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
		return (_data);

		//---------------------------------------------------------------------------------------------------------------------------
		// -
		//---------------------------------------------------------------------------------------------------------------------------
	}

	//-------------------------------------------------------------------------------------------------------------------------------
    // -
	//-------------------------------------------------------------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------------------------------------------------------------
// -
//-----------------------------------------------------------------------------------------------------------------------------------